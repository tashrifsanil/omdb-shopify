{"version":3,"sources":["components/NavBar.js","components/SearchResults.js","components/NominatedMovies.js","components/AlertDialog.js","components/MovieMoreInfo.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","OMDBTitle","fontFamily","fontSize","width","appBar","backgroundColor","root","flexGrow","movieIcon","marginRight","spacing","color","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","NavBar","props","classes","className","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","onChange","event","setSearchTerm","target","value","resultEntry","maxWidth","background","black","maxHeight","overflow","nominateIcon","SearchResults","React","useState","movies","setMovies","useEffect","console","log","searchTerm","searchMovieRequest","currentPage","a","url","fetch","response","json","responseJson","Search","totalResults","parseInt","nominatedMoviesList","i","length","disableNominate","j","imdbID","iter","maxPagesCalc","Math","ceil","setMaxPages","Container","List","map","movie","index","ListItem","role","undefined","dense","button","onClick","onEntryClicked","ListItemIcon","src","Poster","alt","ListItemText","primary","Title","Year","secondary","Fragment","component","inline","ListItemSecondaryAction","IconButton","edge","aria-label","disabled","onNominateClicked","removeNominationButton","NominatedMovies","onRemoveNominationClicked","AlertDialog","open","setOpen","handleClose","hideButton","Button","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","nominations","DialogContentText","DialogActions","Paper","moveMoreInfo","image","img","margin","rating","MovieMoreInfo","additionalMovieData","setAdditionalMovieData","setImdbID","getAdditionalMovieData","fullWidth","scroll","keepMounted","visible","Grid","container","item","ButtonBase","xs","sm","direction","gutterBottom","Plot","justify","Chip","label","imdbRating","pageControlStyles","paper","minHeight","nextPageFab","grey","bottom","right","pageIndicatorFab","prevPageFab","searchResultsStyles","control","PageControlFABS","pageCtrlDialogVisible","setPageCtrlVisibility","inputtedPageNumDialog","setInputtedPageNumDialog","pageError","setPageError","pageErrorText","setPageErrorText","handlePageCtrlClose","fabs","icon","clickHandler","newPageCount","maxPages","setCurrentPage","minPages","fab","Fab","id","TextField","autoFocus","type","error","helperText","onKeyDown","key","preventDefault","InputProps","startAdornment","InputAdornment","App","setSearchResultsVisibility","nominationsVisible","setNominationsVisibility","setNominatedMoviesList","nominationsCompleted","setNomCompleted","showMovieMoreInfo","setShowMovieMoreInfo","movie4MoreInfo","setMovie4MoreInfo","nominatedMovies","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","newNominationsList","align","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8d6b084.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MovieCreationOutlinedIcon from \"@material-ui/icons/MovieCreationOutlined\";\n\nimport \"./NavBar.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  OMDBTitle: {\n    fontFamily: \"BebasNeue\",\n    fontSize: \"250%\",\n    width: \"100%\",\n  },\n  appBar: {\n    backgroundColor: \"#181818\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  movieIcon: {\n    // width: \"3%\",\n    // height: \"3%\",\n    fontSize: \"270%\",\n    marginRight: theme.spacing(2),\n    color: \"#ff316f\",\n    // transform: \"rotate(90deg)\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"30%\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <MovieCreationOutlinedIcon className={classes.movieIcon} />\n          <Typography className={classes.OMDBTitle} variant=\"h4\" noWrap>\n            OMDB MOVIES\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={(event) => props.setSearchTerm(event.target.value)}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles((theme) => ({\n  resultEntry: {\n    alignItems: \"flex-start\",\n  },\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.black,\n    maxHeight: \"100%\",\n    overflow: \"auto\",\n  },\n  nominateIcon: {\n    color: \"#55ff00\",\n  },\n}));\n\nconst SearchResults = (props) => {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n  const [movies, setMovies] = useState([]);\n\n  // This gets run everytime the state of searchTerm changes\n  useEffect(() => {\n    console.log(\"Search term was changed, \", props.searchTerm);\n    searchMovieRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.searchTerm, props.currentPage]);\n\n  const searchMovieRequest = async () => {\n    const url =\n      \"https://www.omdbapi.com/?s=\" +\n      props.searchTerm +\n      \"&apikey=a7d62505\" +\n      \"&page=\" +\n      props.currentPage;\n    const response = await fetch(url);\n\n    const responseJson = await response.json();\n\n    // If search results returned are not empty\n    if (responseJson.Search) {\n      var totalResults = parseInt(responseJson.totalResults);\n\n      // Additionally if we get a list of alreadyNominated movies\n      // we need to disable the movies in that list so they can't be nominated again\n      if (props.nominatedMoviesList) {\n        for (var i = 0; i < responseJson.Search.length; i++) {\n          responseJson.Search[i].disableNominate = false;\n          for (var j = 0; j < props.nominatedMoviesList.length; j++) {\n            console.log(\n              \"Search id \",\n              responseJson.Search[i].imdbID,\n              \" storageid \",\n              props.nominatedMoviesList[j].imdbID\n            );\n            if (\n              responseJson.Search[i].imdbID ===\n              props.nominatedMoviesList[j].imdbID\n            ) {\n              console.log(\"Disabled comparison succeeded \");\n              responseJson.Search[i].disableNominate = true;\n            }\n          }\n        }\n      } else {\n        for (var iter = 0; iter < responseJson.Search.length; iter++) {\n          responseJson.Search[iter].disableNominate = false;\n        }\n      }\n\n      setMovies(responseJson.Search);\n      // Calculation to determine how many pages there will be in total\n      // based on totalResults\n      // responseJson.Search.length is how many cards there are page, i.e.\n      // how many results get returned by page\n      var maxPagesCalc = Math.ceil(totalResults / responseJson.Search.length);\n      props.setMaxPages(maxPagesCalc);\n    }\n  };\n\n  const handleNominateClicked = (movie) => {\n    console.log(\"Nominated \", movie.Title);\n    props.onNominateClicked(movie);\n  };\n\n  return (\n    <Container>\n      <List className={classes.root}>\n        {movies.map((movie, index) => {\n          return (\n            <ListItem\n              key={movie.imdbID}\n              role={undefined}\n              dense\n              button\n              onClick={() => {\n                props.onEntryClicked(movie);\n              }}\n            >\n              <ListItemIcon>\n                <img src={movie.Poster} alt=\"movie\" width={50}></img>\n              </ListItemIcon>\n              <ListItemText\n                className={classes.resultEntry}\n                primary={`${movie.Title} - (${movie.Year})`}\n                secondary={\n                  <React.Fragment>\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      className={classes.inline}\n                      color=\"white\"\n                    ></Typography>\n                    ImDB Link\n                  </React.Fragment>\n                }\n              />\n\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"nominate\"\n                  disabled={movie.disableNominate}\n                  onClick={() => {\n                    // movie.disableNominate = true;\n                    console.log(\"movie clickeddd\", movie.Title);\n                    props.onNominateClicked(movie);\n                  }}\n                >\n                  {!movie.disableNominate ? (\n                    <AddCircleIcon className={classes.nominateIcon} />\n                  ) : null}\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Container>\n  );\n};\n\nexport default SearchResults;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles((theme) => ({\n  resultEntry: {\n    alignItems: \"flex-start\",\n  },\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.black,\n    maxHeight: \"100%\",\n    overflow: \"auto\",\n  },\n  removeNominationButton: {\n    color: \"red\",\n  },\n}));\n\nconst NominatedMovies = (props) => {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <Container>\n      <List className={classes.root}>\n        {props.movies.map((movie, index) => {\n          return (\n            <ListItem\n              key={movie.imdbID}\n              role={undefined}\n              dense\n              button\n              onClick={() => {\n                console.log(\"clickedd search result\");\n              }}\n            >\n              <ListItemIcon>\n                <img src={movie.Poster} alt=\"movie\" width={50}></img>\n              </ListItemIcon>\n              <ListItemText\n                className={classes.resultEntry}\n                primary={`${movie.Title} - (${movie.Year})`}\n                secondary={\n                  <React.Fragment>\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      className={classes.inline}\n                      color=\"white\"\n                    ></Typography>\n                    ImDB Link\n                  </React.Fragment>\n                }\n              />\n\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"nominate\"\n                  onClick={() => {\n                    props.onRemoveNominationClicked(movie);\n                  }}\n                >\n                  <RemoveCircleIcon\n                    className={classes.removeNominationButton}\n                  />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Container>\n  );\n};\n\nexport default NominatedMovies;\n","import React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst AlertDialog = (props) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if (props.open === true) {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  }, [props.open]);\n\n  return (\n    <div>\n      {props.hideButton ? (\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          SUBMIT\n        </Button>\n      ) : null}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle>{\"Nominations Submitted\"}</DialogTitle>\n        <DialogContent>\n          {props.nominations.map((movie, index) => {\n            return (\n              <DialogContentText>\n                {index + 1}. {movie.Title}\n              </DialogContentText>\n            );\n          })}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            CLOSE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AlertDialog;\n","import React, { useEffect } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { red } from \"@material-ui/core/colors\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  Paper: {\n    width: 700,\n  },\n  root: {\n    flexGrow: 1,\n  },\n  moveMoreInfo: {\n    padding: theme.spacing(2),\n    maxWidth: \"md\",\n  },\n  image: {\n    justifyContent: \"space-evenly\",\n    maxWidth: 200,\n    maxHeight: 300,\n  },\n  img: {\n    justifyContent: \"space-evenly\",\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n  rating: {\n    width: \"20%\",\n    fontSize: \"100%\",\n  },\n}));\n\nconst MovieMoreInfo = (props) => {\n  const classes = useStyles();\n\n  const [additionalMovieData, setAdditionalMovieData] = React.useState({});\n  const [imdbID, setImdbID] = React.useState(\"\");\n\n  const getAdditionalMovieData = async () => {\n    console.log(\"Get additional data \");\n    const url =\n      \"https://www.omdbapi.com/?i=\" + imdbID + \"&apikey=a7d62505&plot=full\";\n    const response = await fetch(url);\n    const responseJson = await response.json();\n\n    setAdditionalMovieData(responseJson);\n  };\n\n  useEffect(() => {\n    if (props.movie.imdbID) {\n      setImdbID(props.movie.imdbID);\n      getAdditionalMovieData();\n    } else {\n    }\n  }, [props.movie]);\n\n  return (\n    <Container\n      //  className={\"moveMoreInfo\"}\n      overflow={\"hidden\"}\n      fullWidth={true}\n      maxWidth={\"md\"}\n      scroll={\"body\"}\n      open={props.open}\n      keepMounted\n    >\n      {props.visible ? (\n        <Paper className={classes.Paper}>\n          <Grid container spacing={2} fullWidth={true}>\n            <Grid item>\n              <ButtonBase className={classes.image}>\n                <img\n                  className={classes.img}\n                  alt=\"complex\"\n                  src={additionalMovieData.Poster}\n                />\n              </ButtonBase>\n            </Grid>\n            <Grid item xs={12} sm container>\n              <Grid item xs container direction=\"column\" spacing={2}>\n                <Grid item xs>\n                  <Typography gutterBottom variant=\"h5\">\n                    {additionalMovieData.Title}\n                  </Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                    {additionalMovieData.Plot}\n                  </Typography>\n                </Grid>\n                <Grid item justify=\"flex-end\">\n                  <Chip\n                    className={classes.rating}\n                    label={additionalMovieData.imdbRating + \"/10\"}\n                    color=\"secondary\"\n                  ></Chip>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      ) : null}\n    </Container>\n  );\n};\n\nexport default MovieMoreInfo;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { grey } from \"@material-ui/core/colors\";\nimport ChevronRightOutlinedIcon from \"@material-ui/icons/ChevronRightOutlined\";\nimport ChevronLeftOutlinedIcon from \"@material-ui/icons/ChevronLeftOutlined\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SearchResults from \"./components/SearchResults\";\nimport NominatedMovies from \"./components/NominatedMovies\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AlertDialog from \"./components/AlertDialog\";\nimport MovieMoreInfo from \"./components/MovieMoreInfo\";\n\nimport Container from \"@material-ui/core/Container\";\n\nconst pageControlStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 600,\n    position: \"relative\",\n    minHeight: 200,\n  },\n  nextPageFab: {\n    position: \"absolute\",\n    color: theme.palette.common.white,\n    backgroundColor: grey[900],\n    \"&:hover\": {\n      backgroundColor: \"#f50057\",\n    },\n    bottom: theme.spacing(3),\n    right: theme.spacing(205),\n  },\n  pageIndicatorFab: {\n    position: \"absolute\",\n    bottom: theme.spacing(3),\n    right: theme.spacing(213),\n  },\n  prevPageFab: {\n    position: \"absolute\",\n    color: theme.palette.common.white,\n    backgroundColor: grey[900],\n    \"&:hover\": {\n      backgroundColor: \"#f50057\",\n    },\n    bottom: theme.spacing(3),\n    right: theme.spacing(221),\n  },\n}));\n\nconst searchResultsStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    // justifyContent: \"center\",\n    height: \"100%\",\n  },\n  paper: {\n    justifyContent: \"center\",\n    height: 800,\n    width: \"100%\",\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\n// Page control floating buttons\nconst PageControlFABS = (props) => {\n  const classes = pageControlStyles();\n\n  const [pageCtrlDialogVisible, setPageCtrlVisibility] = useState(false);\n  // Keeps track of the page number that the user inputs in the page control dialog\n  const [inputtedPageNumDialog, setInputtedPageNumDialog] = useState(1);\n\n  // If the user inputs a page thats out of range pageError becomes true\n  const [pageError, setPageError] = useState(false);\n  // Text that tells user whats wrong with the page number they entered\n  const [pageErrorText, setPageErrorText] = useState(\"\");\n\n  const handlePageCtrlClose = () => {\n    setPageCtrlVisibility(false);\n  };\n\n  const handlePageCtrlDialogChange = (event) => {\n    if (\n      props.minPages <= event.target.value &&\n      event.target.value <= props.maxPages\n    ) {\n      setInputtedPageNumDialog(event.target.value);\n      setPageError(false);\n      setPageErrorText(\"\");\n    } else {\n      setPageError(true);\n      setPageErrorText(\n        `Input a page number between ${props.minPages}-${props.maxPages}`\n      );\n    }\n  };\n\n  const handlePageCtrlDialogKeyPresses = (event) => {\n    if (event.key === \"Enter\") {\n      // Jumps to the page the user types on enter key pressed\n      if (!pageError) {\n        // Hide the dialog after enter key\n        setPageCtrlVisibility(false);\n        // The user typed a valid page number to jump to in the dialog\n        // so set that valid page number as the current page number\n        props.setCurrentPage(inputtedPageNumDialog);\n        event.preventDefault();\n      }\n    }\n  };\n\n  // currentPage is an integer indicating current page number\n  var fabs = [\n    {\n      color: \"inherit\",\n      className: classes.nextPageFab,\n      icon: <ChevronRightOutlinedIcon />,\n      label: \"Next\",\n      clickHandler: (event) => {\n        var newPageCount = props.currentPage + 1;\n        if (newPageCount <= props.maxPages) {\n          props.setCurrentPage(newPageCount);\n          console.log(\"Current page changed \", props.currentPage);\n        }\n      },\n    },\n    {\n      color: \"secondary\",\n      className: classes.pageIndicatorFab,\n      icon: `${props.currentPage}/${props.maxPages}`,\n      label: `${props.currentPage}/${props.maxPages}`,\n      clickHandler: (event) => {\n        // Show page control dialog if this button is clicked\n        setPageCtrlVisibility(true);\n      },\n    },\n    {\n      color: \"inherit\",\n      className: classes.prevPageFab,\n      icon: <ChevronLeftOutlinedIcon />,\n      label: \"Prev\",\n      clickHandler: (event) => {\n        var newPageCount = props.currentPage - 1;\n        if (newPageCount >= props.minPages) {\n          props.setCurrentPage(newPageCount);\n          console.log(\"prev current page changed \", newPageCount);\n        }\n      },\n    },\n  ];\n\n  return (\n    <>\n      {fabs.map((fab, index) => (\n        <Fab\n          aria-label={fab.label}\n          className={fab.className}\n          color={fab.color}\n          onClick={fab.clickHandler}\n        >\n          {fab.icon}\n        </Fab>\n      ))}\n      <Dialog\n        open={pageCtrlDialogVisible}\n        onClose={handlePageCtrlClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Enter Page Number</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"pageNumber\"\n            label=\"Page Number\"\n            type=\"number\"\n            fullWidth\n            error={pageError}\n            helperText={pageErrorText}\n            onChange={handlePageCtrlDialogChange}\n            onKeyDown={handlePageCtrlDialogKeyPresses}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <FileCopyIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handlePageCtrlClose} color=\"primary\">\n            CLOSE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResultsVisible, setSearchResultsVisibility] = useState(false);\n  const [nominationsVisible, setNominationsVisibility] = useState(false);\n\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [nominatedMoviesList, setNominatedMoviesList] = useState([]);\n  const [maxPages, setMaxPages] = useState(1);\n\n  const [nominationsCompleted, setNomCompleted] = useState(false);\n  const maxNominations = 5;\n\n  const [showMovieMoreInfo, setShowMovieMoreInfo] = useState(false);\n  // The movie to display in more info section\n  const [movie4MoreInfo, setMovie4MoreInfo] = useState({});\n  // This only gets run when the app loads initially for the first time\n\n  const onSearchEntryClicked = (movie) => {\n    setMovie4MoreInfo(movie);\n    setShowMovieMoreInfo(true);\n  };\n\n  useEffect(() => {\n    const nominatedMovies = JSON.parse(\n      localStorage.getItem(\"omdb-app-nominations\")\n    );\n    console.log(\"Nominated movies local storage \", nominatedMovies);\n    // If we have nothing in local storage our array can be none\n    // so to avoid that we check if its before setting the state of nominated nominated movies\n    // from local storage\n    if (nominatedMovies) {\n      setNominatedMoviesList(nominatedMovies);\n    }\n  }, []);\n\n  useEffect(() => {\n    // Search term has changed, if it's more than 3 characters show search results\n    if (searchTerm.length >= 3) {\n      setSearchResultsVisibility(true);\n    }\n    if (nominatedMoviesList.length > 0) {\n      setNominationsVisibility(true);\n    }\n  }, [searchTerm, nominatedMoviesList]);\n\n  const nominateMovie = (movie) => {\n    if (nominatedMoviesList.length < maxNominations) {\n      movie.disableNominate = true;\n      const newNominationsList = [...nominatedMoviesList, movie];\n      setNominatedMoviesList(newNominationsList);\n      saveToLocalStorage(newNominationsList);\n    } else {\n      setNomCompleted(true);\n    }\n  };\n\n  const removeNomination = (movie) => {\n    movie.disableNominate = false;\n    const newNominationsList = nominatedMoviesList.filter(\n      (nominatedMoviesList) => nominatedMoviesList.imdbID !== movie.imdbID\n    );\n\n    setNominatedMoviesList(newNominationsList);\n    saveToLocalStorage(newNominationsList);\n  };\n\n  const saveToLocalStorage = (items) => {\n    localStorage.setItem(\"omdb-app-nominations\", JSON.stringify(items));\n  };\n  // // This gets run everytime the state of searchTerm changes\n  // useEffect(() => {\n  //   console.log(\"Search term was changed, \", searchTerm);\n  //   searchMovieRequest();\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [searchTerm, currentPage]);\n\n  const classes = searchResultsStyles();\n\n  return (\n    // Use bootstrap styles for root container\n    <>\n      <NavBar setSearchTerm={setSearchTerm} />\n      <Grid container className={classes.root} spacing={6} xs={12}>\n        <Grid item xs={3} direction={\"column\"} alignItems=\"center\">\n          <SearchResults\n            searchTerm={searchTerm}\n            nominatedMoviesList={nominatedMoviesList}\n            onNominateClicked={nominateMovie}\n            setMaxPages={setMaxPages}\n            currentPage={currentPage}\n            onEntryClicked={onSearchEntryClicked}\n          />\n        </Grid>\n        <Grid item xs={3} align=\"center\">\n          {nominationsVisible ? (\n            <Typography variant=\"h5\" align=\"center\">\n              Nominations\n            </Typography>\n          ) : null}\n          <NominatedMovies\n            movies={nominatedMoviesList}\n            onRemoveNominationClicked={removeNomination}\n          />\n          <AlertDialog\n            hideButton={nominationsVisible}\n            open={nominationsCompleted}\n            nominations={nominatedMoviesList}\n          />\n        </Grid>\n        <Grid item xs={3} direction={\"column\"} alignItems=\"center\">\n          <MovieMoreInfo visible={showMovieMoreInfo} movie={movie4MoreInfo} />\n        </Grid>\n      </Grid>\n\n      <PageControlFABS\n        maxPages={maxPages}\n        minPages={1}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      ></PageControlFABS>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}