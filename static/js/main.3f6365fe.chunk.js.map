{"version":3,"sources":["components/AlertDialog.js","resources/icons/imdbIcon.svg","components/MovieMoreInfo.js","components/NominatedMovieCard.js","components/NominationPlaceholder.js","components/NominatedMovies.js","components/PageControl.js","components/SearchAppBar.js","components/SearchResultCard.js","components/SearchResultSkeletonCard.js","components/navigation/PageStepper.js","components/SearchResults.js","resources/icons/shopify.svg","components/SearchField.js","App.js","reportWebVitals.js","index.js"],"names":["AlertDialog","props","React","useState","open","setOpen","handleClose","useEffect","nominations","Dialog","onClose","aria-labelledby","aria-describedby","I","DialogTitle","DialogContent","map","movie","index","DialogContentText","Title","DialogActions","Button","onClick","color","makeStyles","theme","root","flexGrow","paddingBottom","moveMoreInfo","padding","spacing","maxWidth","image","justifyContent","maxHeight","img","margin","display","rating","backgroundColor","palette","info","main","width","fontSize","cover","fallbackPoster","height","ratingMargin","imdbLink","warning","light","useStyles","details","flexDirection","content","flex","title","year","NominatedMovieCard","classes","showSkeleton","setShowSkeleton","useTheme","Card","className","Grid","container","item","xs","CardContent","Skeleton","animation","Typography","variant","noWrap","Year","controls","size","onRemoveNominationClicked","CardMedia","Poster","minHeight","border","borderStyle","borderWidth","borderColor","action","disabled","NominationPlaceholder","raised","elevation","resultEntry","alignItems","background","black","overflow","removeNominationButton","grid","typography","NominatedMovies","movies","justify","length","Array","fill","Type","disableNominate","imdbID","paper","position","nextPageFab","common","white","grey","bottom","right","pageIndicatorFab","prevPageFab","appBar","movieIcon","primary","marginRight","paddingTop","SearchResultCard","console","log","loading","CardActionArea","component","skeletonContent","CardActions","disableNominations","onNominateClicked","window","skeletonTitle","skeletonSubTitle","skeletonMedia","SearchResultSkeletonCard","fullWidth","paddingLeft","paddingRight","PageStepper","maxStepsmaxStepsmaxSteps","onBack","activePage","direction","KeyboardArrowRight","KeyboardArrowLeft","steps","onNext","row","flexWrap","sliceMap","fn","from","toExclusive","array","len","mapped","i","SearchResults","data","setData","show","setShow","setLoading","setError","maxSteps","setMaxSteps","setActivePage","initialMovieData","setMovies","setDisableNominations","searchTerm","searchMovieRequest","nominatedMoviesList","a","url","axios","response","Search","j","iter","maxPagesCalc","Math","ceil","totalResults","Box","style","currentPage","onSearchEntryClicked","parseInt","SearchField","landing","setLanding","text","setText","handleLanding","borderRadius","fieldStyle","setFieldStyle","rootStyle","setRootStyle","textField","input","icon","banner","iconRoot","textAlign","shoppies","fontFamily","homeIcon","marginLeft","marginTop","Icon","src","ShopifyIcon","Divider","orientation","IconButton","edge","aria-label","event","onHomeClick","TextField","placeholder","onChange","target","value","setSearchTerm","InputProps","startAdornment","InputAdornment","nominationsHeader","App","setSearchResultsVisibility","nominationsVisible","setNominationsVisibility","setNominatedMoviesList","nominationsCompleted","setNominationsCompleted","setOpenNominationsDialog","setShowMovieMoreInfo","nominatedMovies","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","lightTheme","createMuiTheme","default","secondary","active","disabledBackground","divider","searchfield","CssBaseline","Helmet","maxNominations","newNominationsList","filter","hideButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f6365fe.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\n\n\nconst AlertDialog = (props) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if (props.open === true) {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  }, [props.open, props.nominations]);\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"I\n      >\n        <DialogTitle>{\"Nominations Submitted\"}</DialogTitle>\n        <DialogContent>\n          {props.nominations.map((movie, index) => {\n            return (\n              <DialogContentText>\n                {index + 1}. {movie.Title}\n              </DialogContentText>\n            );\n          })}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            CLOSE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AlertDialog;\n","export default __webpack_public_path__ + \"static/media/imdbIcon.b9cd8583.svg\";","import React, { useEffect } from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TheatersIcon from \"@material-ui/icons/Theaters\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport Typography from \"@material-ui/core/Typography\";\nimport imdbIcon from \"../resources/icons/imdbIcon.svg\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    paddingBottom: \"5%\",\n  },\n  moveMoreInfo: {\n    padding: theme.spacing(2),\n    maxWidth: \"md\",\n  },\n  image: {\n    justifyContent: \"space-evenly\",\n    maxWidth: 200,\n    maxHeight: 300,\n  },\n  img: {\n    justifyContent: \"space-evenly\",\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n  rating: {\n    backgroundColor: theme.palette.info.main,\n    width: \"20%\",\n    fontSize: \"100%\",\n  },\n  cover: {\n    width: \"100%\",\n  },\n  fallbackPoster: {\n    fontSize: \"100%\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  ratingMargin: {\n    margin: theme.spacing(1),\n  },\n  imdbLink: {\n    maxWidth: 50,\n    // height: \"60%\",\n    backgroundColor: theme.palette.warning.light,\n    color: \"black\",\n  },\n}));\n\nconst MovieMoreInfo = (props) => {\n  const classes = useStyles();\n\n  const [additionalMovieData, setAdditionalMovieData] = React.useState({});\n  const [imdbID, setImdbID] = React.useState(\"\");\n\n  const getAdditionalMovieData = async () => {\n    console.log(\"Get additional data \");\n    const url =\n      \"https://www.omdbapi.com/?i=\" +\n      props.movie.imdbID +\n      \"&apikey=a7d62505&plot=full\";\n    const response = await fetch(url);\n    const responseJson = await response.json();\n\n    setAdditionalMovieData(responseJson);\n  };\n\n  useEffect(() => {\n    if (props.movie) {\n      setImdbID(props.movie.imdbID);\n      getAdditionalMovieData();\n    } else {\n    }\n  }, [props.movie]);\n\n  return (\n    <>\n      {props.visible ? (\n        <Card className={classes.root}>\n          <Grid\n            container\n            direction=\"row\"\n            fullWidth={true}\n            spacing={2}\n            justify=\"space-evenly\"\n          >\n            <Grid item xs={4}>\n              {props.movie.Poster !== \"N/A\" ? (\n                <img\n                  className={classes.cover}\n                  src={props.movie.Poster}\n                  alt=\"\"\n                />\n              ) : (\n                <TheatersIcon className={classes.fallbackPoster} />\n              )}\n            </Grid>\n            <Grid item container xs={8}>\n              <Grid item xs={8}>\n                <Typography variant=\"h4\">{props.movie.Title}</Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography variant=\"h6\">{props.movie.Year}</Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography variant=\"button\" color=\"secondary\">\n                  {additionalMovieData.Genre}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography variant=\"subtitle1\">\n                  Languages: {additionalMovieData.Language}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography variant=\"subtitle1\">\n                  Country: {additionalMovieData.Country}\n                </Typography>\n              </Grid>\n              <Grid item container xs={8}>\n                <Grid item>\n                  <Fab\n                    variant=\"extended\"\n                    size=\"small\"\n                    color=\"primary\"\n                    className={classes.rating}\n                  >\n                    <ThumbUpIcon className={classes.ratingMargin} />\n                    {additionalMovieData.Metascore}\n                    {additionalMovieData.Metascore !== \"N/A\" ? \"/100\" : null}\n                  </Fab>\n                  <Fab\n                    variant=\"extended\"\n                    size=\"small\"\n                    color=\"secondary\"\n                    className={classes.ratingMargin}\n                  >\n                    {additionalMovieData.Rated}\n                  </Fab>\n\n                  <a href={`https://www.imdb.com/title/${props.movie.imdbID}`}>\n                    <img src={imdbIcon} className={classes.imdbLink}></img>\n                  </a>\n                </Grid>\n              </Grid>\n              <Grid item xs={8}>\n                Actors:{\" \"}\n                <Typography variant=\"button\">\n                  {additionalMovieData.Actors}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography variant=\"button\" color=\"secondary\"></Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography variant=\"body\">\n                  {additionalMovieData.Writers}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid item></Grid>\n            <Grid item container xs={11} spacing={2}>\n              <Typography variant=\"h4\">Plot</Typography>\n              <Grid item>\n                <Typography variant=\"body\" paragraph={true}>\n                  {additionalMovieData.Plot}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Card>\n      ) : null}\n    </>\n  );\n};\n\nexport default MovieMoreInfo;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  IconButton,\n  Typography,\n  SkipPreviousIcon,\n  PlayArrowIcon,\n  SkipNextIcon,\n  Button,\n  Grid,\n  Box,\n} from '@material-ui/core'\n\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: 'auto',\n    height: \"100%\",\n  },\n  cover: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  title: {\n    fontSize: '1.2rem',\n  },\n  year: {\n    fontSize: '1rem',\n  },\n}));\n\nconst NominatedMovieCard = (props) => {\n  const classes = useStyles();\n  const [showSkeleton, setShowSkeleton] = useState(false);\n  const theme = useTheme();\n\n  useEffect(() => {\n    setShowSkeleton(props.showSkeleton);\n  }, [props.showSkeleton])\n\n  return (\n    <Card className={classes.root}>\n      <Grid container className={classes.root}>\n        <Grid item container xs={10}>\n          <Grid item xs={12}>\n            <CardContent className={classes.content}>\n              {showSkeleton ? (\n                <>\n                  <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n                  <Skeleton animation=\"wave\" height={10} width=\"60%\" />\n                </>\n              ) : (\n                <>\n                  <Typography variant=\"h6\" className={classes.title} noWrap={true}>\n                    {props.movie.Title}\n                  </Typography>\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.year}>\n                    {props.movie.Year}\n                  </Typography>\n                </>\n              )}\n\n            </CardContent>\n          </Grid>\n          <Grid item xs={12}>\n            <div className={classes.controls}>\n              {showSkeleton ? (\n                <Skeleton animation={false} height=\"25%\" width=\"30%\" />\n              ) : (\n                <Button size=\"small\" color=\"primary\"\n                  onClick={() => {\n                    props.onRemoveNominationClicked(props.movie);\n                  }}>\n                  Remove\n                </Button>\n              )}\n            </div>\n          </Grid>\n        </Grid>\n        <Grid item xs={2}>\n          {showSkeleton ? (\n            <Skeleton animation={false} variant=\"rect\" className={classes.cover} />\n\n          ) : (\n            <CardMedia\n              className={classes.cover}\n              image={props.movie.Poster}\n            />\n          )}\n        </Grid>\n      </Grid>\n    </Card >\n  );\n}\n\nexport default NominatedMovieCard;\n","import React, { useEffect, useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n    Card\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        height: \"100%\",\n        minHeight: \"10vh\",\n        border: \".15rem\",\n        borderStyle: \"dashed\",\n        borderWidth: \"100\",\n        borderColor: theme.palette.action.disabled,\n    },\n}));\n\n\nconst NominationPlaceholder = () => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}\n            raised={false} \n            elevation={0}>\n        </Card>\n    );\n};\n\nexport default NominationPlaceholder;","import NominatedMovieCard from \"./NominatedMovieCard\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Grid,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport NominationPlaceholder from \"./NominationPlaceholder\";\n\nconst useStyles = makeStyles((theme) => ({\n  resultEntry: {\n    alignItems: \"flex-start\",\n  },\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.black,\n    // maxHeight: \"50vh\",\n    height: 100,\n    overflow: \"auto\",\n  },\n  removeNominationButton: {\n    color: \"red\",\n  },\n  grid: {\n    alignItems: \"stretch\"\n  },\n  typography: {\n    fontSize: \"1.2rem\",\n  }\n}));\n\nconst NominatedMovies = (props) => {\n  const classes = useStyles();\n  const maxNominations = 5;\n\n\n  const movieDataFormat = {\n    Poster: \"\",\n    Title: \"\",\n    Type: \"\",\n    Year: \"\",\n    disableNominate: false,\n    imdbID: \"\",\n  }\n\n  useEffect(() => {\n\n  }, [props.movies])\n\n\n  return (\n    <>\n      <>\n        <Grid item container xs={12}\n          alignItems=\"center\"\n          justify=\"space-around\">\n          <Grid item>\n            <Typography variant=\"h6\" className={classes.typography}>\n              NOMINATIONS\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h6\" className={classes.typography}>\n              {props.movies.length}/{maxNominations}\n            </Typography>\n          </Grid>\n        </Grid>\n        {props.movies.map((movie, index) => {\n          return (\n            <Grid item xs={12}>\n              <NominatedMovieCard\n                movie={movie}\n                onRemoveNominationClicked={props.onRemoveNominationClicked}\n              />\n            </Grid>\n          );\n        })}\n        {\n          Array(maxNominations - props.movies.length).fill(movieDataFormat).map((movie, index) => {\n            return (\n              <Grid item xs={12}>\n                <NominationPlaceholder />\n              </Grid>\n            );\n          })}\n      </>\n    </>\n  );\n};\n\nexport default NominatedMovies;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport Button from \"@material-ui/core/Button\";\nimport ChevronLeftOutlinedIcon from \"@material-ui/icons/ChevronLeftOutlined\";\nimport ChevronRightOutlinedIcon from \"@material-ui/icons/ChevronRightOutlined\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Fab from \"@material-ui/core/Fab\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { grey } from \"@material-ui/core/colors\";\n\nconst pageControlStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 600,\n    position: \"relative\",\n    minHeight: 200,\n  },\n  nextPageFab: {\n    position: \"absolute\",\n    color: theme.palette.common.white,\n    backgroundColor: grey[900],\n    \"&:hover\": {\n      backgroundColor: \"#f50057\",\n    },\n    bottom: theme.spacing(1),\n    right: theme.spacing(190),\n  },\n  pageIndicatorFab: {\n    position: \"absolute\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(198),\n  },\n  prevPageFab: {\n    position: \"absolute\",\n    color: theme.palette.common.white,\n    backgroundColor: grey[900],\n    \"&:hover\": {\n      backgroundColor: \"#f50057\",\n    },\n    bottom: theme.spacing(1),\n    right: theme.spacing(206),\n  },\n}));\n\nconst PageControl = (props) => {\n  const classes = pageControlStyles();\n\n  const [pageCtrlDialogVisible, setPageCtrlVisibility] = useState(false);\n  // Keeps track of the page number that the user inputs in the page control dialog\n  const [inputtedPageNumDialog, setInputtedPageNumDialog] = useState(1);\n\n  // If the user inputs a page thats out of range pageError becomes true\n  const [pageError, setPageError] = useState(false);\n  // Text that tells user whats wrong with the page number they entered\n  const [pageErrorText, setPageErrorText] = useState(\"\");\n\n  const handlePageCtrlClose = () => {\n    setPageCtrlVisibility(false);\n  };\n\n  const handlePageCtrlDialogChange = (event) => {\n    if (\n      props.minPages <= event.target.value &&\n      event.target.value <= props.maxPages\n    ) {\n      setInputtedPageNumDialog(event.target.value);\n      setPageError(false);\n      setPageErrorText(\"\");\n    } else {\n      setPageError(true);\n      setPageErrorText(\n        `Input a page number between ${props.minPages}-${props.maxPages}`\n      );\n    }\n  };\n\n  const handlePageCtrlDialogKeyPresses = (event) => {\n    if (event.key === \"Enter\") {\n      // Jumps to the page the user types on enter key pressed\n      if (!pageError) {\n        // Hide the dialog after enter key\n        setPageCtrlVisibility(false);\n        // The user typed a valid page number to jump to in the dialog\n        // so set that valid page number as the current page number\n        props.setCurrentPage(inputtedPageNumDialog);\n        event.preventDefault();\n      }\n    }\n  };\n\n  // currentPage is an integer indicating current page number\n  var fabs = [\n    {\n      color: \"inherit\",\n      className: classes.nextPageFab,\n      icon: <ChevronRightOutlinedIcon />,\n      label: \"Next\",\n      clickHandler: (event) => {\n        var newPageCount = props.currentPage + 1;\n        if (newPageCount <= props.maxPages) {\n          props.setCurrentPage(newPageCount);\n          console.log(\"Current page changed \", props.currentPage);\n        }\n      },\n    },\n    {\n      color: \"secondary\",\n      className: classes.pageIndicatorFab,\n      icon: `${props.currentPage}/${props.maxPages}`,\n      label: `${props.currentPage}/${props.maxPages}`,\n      clickHandler: (event) => {\n        // Show page control dialog if this button is clicked\n        setPageCtrlVisibility(true);\n      },\n    },\n    {\n      color: \"inherit\",\n      className: classes.prevPageFab,\n      icon: <ChevronLeftOutlinedIcon />,\n      label: \"Prev\",\n      clickHandler: (event) => {\n        var newPageCount = props.currentPage - 1;\n        if (newPageCount >= props.minPages) {\n          props.setCurrentPage(newPageCount);\n          console.log(\"prev current page changed \", newPageCount);\n        }\n      },\n    },\n  ];\n\n  return (\n    <>\n      {fabs.map((fab, index) => (\n        <Fab\n          aria-label={fab.label}\n          className={fab.className}\n          color={fab.color}\n          onClick={fab.clickHandler}\n        >\n          {fab.icon}\n        </Fab>\n      ))}\n      <Dialog\n        open={pageCtrlDialogVisible}\n        onClose={handlePageCtrlClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Enter Page Number</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"pageNumber\"\n            label=\"Page Number\"\n            type=\"number\"\n            fullWidth\n            error={pageError}\n            helperText={pageErrorText}\n            onChange={handlePageCtrlDialogChange}\n            onKeyDown={handlePageCtrlDialogKeyPresses}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <FileCopyIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handlePageCtrlClose} color=\"primary\">\n            CLOSE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default PageControl;\n","import {\n  fade,\n  makeStyles\n} from \"@material-ui/core/styles\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport MovieCreationOutlinedIcon from \"@material-ui/icons/MovieCreationOutlined\";\nimport React from \"react\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: \"#000000\",\n  },\n  movieIcon: {\n    fontSize: \"250%\",\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst SearchAppBar = (props) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" className={classes.appBar}>\n      <Toolbar>\n        <Grid container xs={12} alignItems=\"flex-start\">\n          <Grid item xs={3}>\n            <MovieCreationOutlinedIcon className={classes.movieIcon} />\n          </Grid>\n          <Grid item xs={6}>\n          </Grid>\n          <Grid item xs={3}>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default SearchAppBar;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    marginRight: theme.spacing(2),\n  },\n  cover: {\n    width: \"100%\",\n    height: \"20vh\",\n  },\n  content: {\n    height: \"100%\",\n  },\n  title: {\n    fontSize: \"1rem\",\n  },\n  year: {\n    fontSize: \"1rem\",\n  },\n  controls: {\n    paddingTop: \"20%\",\n  }\n}));\n\nconst SearchResultCard = (props) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    console.log(\"Search result card loading -> \", props.loading);\n    console.log(\"Search result movie -> \", props.movie);\n  }, [props.loading, props.movie])\n\n\n\n  return (\n    <Card className={classes.root}>\n\n      <CardActionArea>\n        {props.loading ? (\n          <Skeleton animation=\"wave\" variant=\"rect\" height=\"20vh\" width=\"100%\" />\n        ) : (\n          <CardMedia\n            component=\"img\"\n            className={classes.cover}\n            image={props.movie.Poster}\n          />\n        )}\n        <CardContent className={classes.content}>\n          {props.loading ? (\n            <div className={classes.skeletonContent}>\n              <Skeleton animation=\"wave\" height=\"100%\" width=\"100%\" />\n              <Skeleton animation=\"wave\" height=\"100%\" width=\"80%\" />\n            </div>\n          ) : (\n            <>\n              <Typography variant=\"h6\" className={classes.title}>\n                {props.movie.Title}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" className={classes.year}>\n                {props.movie.Year}\n              </Typography>\n            </>\n          )}\n        </CardContent>\n      </CardActionArea>\n      <CardActions className={classes.controls}>\n        {props.loading ? (<>\n          <Skeleton animation=\"wave\" height=\"100%\" width=\"100%\" />\n          <Skeleton animation=\"wave\" height=\"100%\" width=\"100%\" />\n        </>\n        ) : (\n          <>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              disabled={props.movie.disableNominate || props.disableNominations}\n              onClick={() => {\n                props.onNominateClicked(props.movie);\n              }}>\n              Nominate\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => {\n                window.open(`https://www.imdb.com/title/${props.movie.imdbID}`);\n              }}\n            >\n              Learn More\n            </Button>\n          </>\n        )}\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default SearchResultCard;","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        marginRight: theme.spacing(2),\n    },\n    cover: {\n        width: \"100%\",\n        height: \"20vh\",\n    },\n    content: {\n        // height: \"100%\",\n    },\n    skeletonTitle: {\n        width: \"80%\",\n        height: \"3.5vh\",\n    },\n    skeletonSubTitle: {\n        width: \"5vw\",\n        height: \"3.5vh\",\n    },\n    skeletonMedia: {\n        height: \"20vh\",\n        width: \"100%\",\n    },\n    skeletonContent: {\n        width: \"5vw\",\n        paddingBottom: \"32%\",\n    }\n}));\n\nconst SearchResultSkeletonCard = (props) => {\n    const classes = useStyles();\n\n    useEffect(() => {\n        console.log(\"Search result card loading -> \", props.loading);\n        console.log(\"Search result movie -> \", props.movie);\n    }, [props.loading, props.movie])\n\n\n\n    return (\n        <Card className={classes.root} fullWidth={true}>\n            <CardActionArea>\n\n                <CardMedia\n                >\n                    <Skeleton animation=\"wave\" variant=\"rect\" height=\"20vh\" width=\"100%\" />\n\n                </CardMedia>\n                <CardContent className={classes.content}>\n\n                    <div className={classes.skeletonContent}>\n                        <Skeleton animation=\"wave\" height=\"100%\" width=\"100%\" />\n                        <Skeleton animation=\"wave\" height=\"100%\" width=\"80%\" />\n                    </div>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Skeleton animation=\"wave\" height=\"100%\" width=\"100%\" />\n                <Skeleton animation=\"wave\" height=\"100%\" width=\"100%\" />\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default SearchResultSkeletonCard;","import React, { useEffect, useState } from \"react\";\n\nimport {\n    Grid,\n    Button,\n    Typography,\n} from \"@material-ui/core\"\n\nimport {\n    KeyboardArrowLeft,\n    KeyboardArrowRight\n} from '@material-ui/icons';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: \"1%\",\n        paddingRight: \"1%\",\n    }\n}));\n\n\nconst PageStepper = (props) => {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <Grid container\n            className={classes.root}\n            justify=\"space-between\"\n            alignItems=\"center\"maxStepsmaxStepsmaxSteps\n        >\n            <Grid item>\n                <Button size=\"small\" onClick={props.onBack} disabled={props.activePage == 1}>\n                    {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                    Back\n                </Button>\n            </Grid>\n            <Grid item>\n                <Typography variant=\"body2\">{props.activePage} / {props.steps}</Typography>\n\n            </Grid>\n            <Grid item>\n                <Button size=\"small\" onClick={props.onNext} disabled={props.activePage === props.steps - 1}>\n                    Next\n                    {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                </Button>\n            </Grid>\n\n\n        </Grid>\n    )\n}\n\nexport default PageStepper;\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  Grid,\n  Box,\n  Card,\n  Divider,\n  MobileStepper,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\n\nimport {\n  KeyboardArrowLeft,\n  KeyboardArrowRight\n} from '@material-ui/icons';\n\nimport SearchResultCard from \"./SearchResultCard\";\nimport SearchResultSkeletonCard from \"./SearchResultSkeletonCard\";\n\nimport PageStepper from \"./navigation/PageStepper\";\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport axios from 'axios';\n\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    display: 'flex',\n    height: \"100%\",\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    justifyContent: 'space-between',\n    alignItems: 'stretch',\n    height: '100%',\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst sliceMap = (fn, from, toExclusive, array) => {\n  const len = toExclusive - from;\n  console.log(\"Array len \", len);\n\n  const mapped = Array(len);\n\n  for (let i = 0; i < len; i++) {\n    mapped[i] = fn(array[i + from], i);\n  }\n\n  return mapped;\n};\n\nconst SearchResults = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [data, setData] = useState([]);\n\n  const [show, setShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const [maxSteps, setMaxSteps] = useState(1);\n  const [activePage, setActivePage] = useState(1);\n\n  var movieDataFormat = {\n    Title: \"\",\n    Year: \"\",\n    Poster: \"\",\n  }\n\n  const initialMovieData = new Array(10).fill(movieDataFormat);\n\n  const [movies, setMovies] = useState(initialMovieData);\n  const [disableNominations, setDisableNominations] = useState(false);\n\n  // This gets run everytime the state of searchTerm changes\n  useEffect(() => {\n    console.log(\"Search term was changed, \", props.searchTerm);\n    setActivePage(1);\n    if (props.searchTerm.length > 0)\n    searchMovieRequest();\n\n  }, [props.searchTerm]);\n\n  useEffect(() => {\n    searchMovieRequest();\n  }, [activePage])\n\n  // Prevent further nominations after 5 nominations have already been made\n  useEffect(() => {\n    if (props.nominatedMoviesList.length >= 5) {\n      setDisableNominations(true);\n    } else {\n      setDisableNominations(false);\n\n    }\n  }, [props.nominatedMoviesList])\n\n\n  console.log(\"Data test \", data);\n  console.log(\"Loading stats \", loading);\n\n\n  const searchMovieRequest = async () => {\n    const url =\n      \"https://www.omdbapi.com/?s=\" +\n      props.searchTerm +\n      \"&apikey=a7d62505\" +\n      \"&page=\" +\n      activePage;\n\n    setLoading(true);\n\n    try {\n      const response = await axios(url);\n      setData(response.data);\n\n\n      // Additionally if we get a list of alreadyNominated movies\n      // we need to disable the movies in that list so they can't be nominated again\n      if (props.nominatedMoviesList) {\n        for (var i = 0; i < response.data.Search.length; i++) {\n          response.data.Search[i].disableNominate = false;\n          for (var j = 0; j < props.nominatedMoviesList.length; j++) {\n            console.log(\n              \"Search id \",\n              response.data.Search[i].imdbID,\n              \" storageid \",\n              props.nominatedMoviesList[j].imdbID\n            );\n            if (\n              response.data.Search[i].imdbID ===\n              props.nominatedMoviesList[j].imdbID\n            ) {\n              console.log(\"Disabled comparison succeeded \");\n              response.data.Search[i].disableNominate = true;\n            }\n          }\n        }\n      } else {\n        for (var iter = 0; iter < response.data.Search.length; iter++) {\n          response.data.Search[iter].disableNominate = false;\n        }\n      }\n\n      setMovies(response.data.Search);\n\n      var maxPagesCalc = Math.ceil(response.data.totalResults / 10);\n      setMaxSteps(maxPagesCalc);\n\n      setLoading(false);\n      setShow(true);\n\n    } catch (err) {\n      setError(err);\n      setLoading(false);\n    }\n\n    console.log(\"Search data -> \", data);\n  }\n\n\n\n  const handlePageNext = () => {\n    setActivePage((currentPage) => currentPage + 1);\n  };\n\n  const handlePageBack = () => {\n    setActivePage((currentPage) => currentPage - 1);\n  };\n\n  return (\n    <>\n      {show ? (\n        <Box component=\"flex\" style={{ height: '100%', width: '100%' }} spacing={2}>\n          <PageStepper\n            steps={maxSteps}\n            activePage={activePage}\n            onBack={handlePageBack}\n            onNext={handlePageNext}\n          />\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Box className={classes.row}>\n                {sliceMap((movie, index) => {\n                  return (\n                    <>\n                      {loading ? (\n                        <SearchResultSkeletonCard />\n                      ) : (\n                        <SearchResultCard\n                          movie={movie}\n                          loading={loading}\n                          disableNominations={disableNominations}\n                          onSearchEntryClicked={props.onSearchEntryClicked}\n                          onNominateClicked={props.onNominateClicked}\n                        />\n                      )}\n                    </>\n                  )\n                }, 0, parseInt(movies.length / 2), movies)}\n\n              </Box>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Box className={classes.row}>\n                {sliceMap((movie, index) => {\n                  return (\n                    <>\n                      {loading ? (\n                        <SearchResultSkeletonCard />\n                      ) : (\n                        <SearchResultCard\n                          movie={movie}\n                          loading={loading}\n                          disableNominations={disableNominations}\n                          onSearchEntryClicked={props.onSearchEntryClicked}\n                          onNominateClicked={props.onNominateClicked}\n                        />\n                      )}\n                    </>\n                  )\n                }, parseInt(movies.length / 2), movies.length, movies)}\n\n              </Box>\n            </Grid>\n\n          </Grid>\n\n        </Box>\n\n      ) : null}\n    </>\n  );\n};\n\nexport default SearchResults;\n","export default __webpack_public_path__ + \"static/media/shopify.0d7bd304.svg\";","import React, { useEffect, useState } from \"react\";\n\nimport {\n    TextField,\n    InputAdornment,\n    IconButton,\n    Grid,\n    InputBase,\n    Icon,\n    Typography,\n    Divider\n} from \"@material-ui/core\";\n\n\nimport {\n    makeStyles,\n    fade\n} from '@material-ui/core/styles';\n\nimport MovieCreationOutlinedIcon from '@material-ui/icons/MovieCreationOutlined';\n\nimport '@fontsource/roboto';\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ShopifyIcon from '../resources/icons/shopify.svg'\n\nconst SearchField = (props) => {\n    const [landing, setLanding] = useState(true);\n    const [text, setText] = useState(\"\");\n\n    useEffect(() => {\n        handleLanding();\n    }, [props.landing])\n\n\n    const [fieldStyle, setFieldStyle] = useState({\n        \"& .MuiOutlinedInput-root\": {\n            borderRadius: \"20vh\",\n        }\n    })\n\n    const [rootStyle, setRootStyle] = useState({\n        paddingTop: \"25vh\",\n        paddingBottom: \"16px\",\n        alignItems: 'center',\n    })\n\n    const handleLanding = () => {\n        if (props.landing == false) {\n            setRootStyle({\n                paddingTop: \"0vh\",\n                paddingBottom: \"1vh\",\n                alignItems: 'center',\n            })\n            setFieldStyle({\n                paddingTop: \"16px\",\n            })\n        }\n        else {\n            setRootStyle({\n                paddingTop: \"25vh\",\n                paddingBottom: \"16px\",\n                alignItems: 'center',\n            })\n        }\n        setLanding(props.landing);\n    }\n\n    const handleChange = (event) => {\n        setText(event.target.value);\n        props.setSearchTerm(event.target.value);\n    }\n\n    const handleHomeClick = (event) => {\n        setText(\"\");\n        props.onHomeClick()\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        textField: {\n            \"& .MuiOutlinedInput-root\": {\n                background: theme.palette.background.paper,\n                borderRadius: \"20vh\",\n            }\n        },\n        input: {\n            color: theme.palette.text.primary,\n        },\n        icon: {\n            height: \"30vh\",\n            width: \"30vh\",\n            fill: \"red\",\n        },\n        banner: {\n            paddingBottom: theme.spacing(4),\n        },\n        iconRoot: {\n            // maxWidth: 50,\n            textAlign: 'center',\n            height: \"100%\",\n            width: \"100%\",\n        },\n        shoppies: {\n            fontFamily: \"Roboto\",\n        },\n        homeIcon: {\n            color: theme.palette.primary.main,\n            fontSize: \"3rem\",\n            marginLeft: \"1rem\",\n            marginTop: \".3rem\",\n        }\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <Grid container style={rootStyle}>\n            {landing ? (\n                <Grid item container xs={12} justify=\"flex-start\" alignItems=\"center\" className={classes.banner}>\n                    <Grid item xs={3} />\n                    <Grid item>\n                        <Icon className={classes.iconRoot}>\n                            <img src={ShopifyIcon} className={classes.icon}></img>\n                        </Icon>\n                    </Grid>\n                    <Grid item>\n                        <Divider orientation=\"vertical\" />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Typography variant=\"h1\" className={classes.shoppies}>the shoppies</Typography>\n                    </Grid>\n                </Grid>\n            ) : null}\n            <Grid item container xs={12} justify=\"center\" alignItems=\"stretch\">\n                <Grid item xs={landing ? 3 : 1}>\n                    {landing ? null : (\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"home\"\n                            onClick={handleHomeClick}>\n                            <MovieCreationOutlinedIcon className={classes.homeIcon} />\n                        </IconButton>\n                    )}\n                </Grid>\n\n                <Grid item xs={landing ? 6 : 10}>\n                    <TextField\n                        // label=\"With normal TextField\"\n                        className={classes.textField}\n                        style={fieldStyle}\n                        placeholder=\"Search to nominate your top 5 favorite movies & series.\"\n                        fullWidth={true}\n                        variant={'outlined'}\n                        onChange={handleChange}\n                        value={text}\n                        InputProps={{\n                            className: classes.input,\n                            startAdornment: (\n                                <InputAdornment>\n                                    <IconButton>\n                                        <SearchIcon />\n                                    </IconButton>\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={landing ? 3 : 1} />\n            </Grid>\n\n        </Grid >\n    );\n}\n\nexport default SearchField;","// import \"./App.css\";\nimport \"fontsource-roboto\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport React, { useEffect, useState } from \"react\";\n\nimport {\n  ThemeProvider,\n  MuiThemeProvider,\n  createMuiTheme\n} from \"@material-ui/core/styles\";\n\nimport {\n  makeStyles,\n  useTheme\n} from \"@material-ui/core/styles\";\n\nimport AlertDialog from \"./components/AlertDialog\";\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport Grid from \"@material-ui/core/Grid\";\nimport MovieMoreInfo from \"./components/MovieMoreInfo\";\nimport NominatedMovies from \"./components/NominatedMovies\";\nimport NominatedMovieCard from \"./components/NominatedMovieCard\";\nimport PageControl from \"./components/PageControl\";\nimport SearchAppBar from \"./components/SearchAppBar\";\nimport SearchResults from \"./components/SearchResults\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Helmet } from 'react-helmet';\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { Box, Card } from \"@material-ui/core\";\nimport SearchField from \"./components/SearchField\";\n\nconst useStyles = makeStyles((theme) => ({\n  nominationsHeader: {\n    paddingLeft: \"1%\",\n    fontFamily: \"Open Sans Light\",\n    width: \"100%\",\n  },\n}));\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResultsVisible, setSearchResultsVisibility] = useState(false);\n  const [nominationsVisible, setNominationsVisibility] = useState(false);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [nominatedMoviesList, setNominatedMoviesList] = useState([]);\n  const [maxPages, setMaxPages] = useState(1);\n\n  const [nominationsCompleted, setNominationsCompleted] = useState(false);\n  const [openNominationsDialog, setOpenNominationsDialog] = useState(false);\n\n  const maxNominations = 5;\n\n  const [landing, setLanding] = useState(true);\n\n  const [showMovieMoreInfo, setShowMovieMoreInfo] = useState(false);\n\n  // The movie to display in more info section\n  const [movie4MoreInfo, setMovie4MoreInfo] = useState({});\n\n  const onSearchEntryClicked = (movie) => {\n    setMovie4MoreInfo(movie);\n    console.log(\"Search Entry clicked \", movie4MoreInfo);\n    setShowMovieMoreInfo(true);\n  };\n\n  useEffect(() => {\n    const nominatedMovies = JSON.parse(\n      localStorage.getItem(\"omdb-app-nominations\")\n    );\n\n    console.log(\"Nominated movies local storage \", nominatedMovies);\n    // If we have nothing in local storage our array can be none\n    // so to avoid that we check if its before setting the state of nominated nominated movies\n    // from local storage\n    if (nominatedMovies) {\n      setNominatedMoviesList(nominatedMovies);\n    }\n  }, []);\n\n  useEffect(() => {\n    // Search term has changed, if it's more than 3 characters show search results\n\n    if (searchTerm.length > 0) {\n      setLanding(false);\n      setSearchResultsVisibility(true);\n    } else if (searchTerm.length === 0) {\n      setSearchResultsVisibility(false);\n      setShowMovieMoreInfo(false);\n    }\n    if (nominatedMoviesList.length > 0) {\n      setLanding(false);\n      setNominationsVisibility(true);\n    }\n  }, [searchTerm, nominatedMoviesList]);\n\n  const nominateMovie = (movie) => {\n    if (nominatedMoviesList.length < maxNominations - 1) {\n      movie.disableNominate = true;\n      const newNominationsList = [...nominatedMoviesList, movie];\n      setNominatedMoviesList(newNominationsList);\n      saveToLocalStorage(newNominationsList);\n    } else if (nominatedMoviesList.length === maxNominations - 1) {\n      movie.disableNominate = true;\n      const newNominationsList = [...nominatedMoviesList, movie];\n      setNominatedMoviesList(newNominationsList);\n      saveToLocalStorage(newNominationsList);\n      setNominationsCompleted(true);\n    } else {\n\n      setNominationsCompleted(true);\n    }\n  };\n\n  const handleHomeClick = () => {\n    setSearchTerm(\"\");\n    setNominatedMoviesList([]);\n    setLanding(true); \n  }\n\n  const removeNomination = (movie) => {\n    movie.disableNominate = false;\n    const newNominationsList = nominatedMoviesList.filter(\n      (nominatedMoviesList) => nominatedMoviesList.imdbID !== movie.imdbID\n    );\n    setNominationsCompleted(false);\n    setNominatedMoviesList(newNominationsList);\n    saveToLocalStorage(newNominationsList);\n  };\n\n  const saveToLocalStorage = (items) => {\n    localStorage.setItem(\"omdb-app-nominations\", JSON.stringify(items));\n  };\n\n  const classes = useStyles();\n\n  // dark mode theming\n  const lightTheme = createMuiTheme({});\n  const darkTheme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#BB86FC',\n      },\n      background: {\n        default: '#121212',\n        paper: '#1e1e1e',\n      },\n      text: {\n        primary: '#e3e3e3',\n        secondary: '#a5a5a5',\n        disabled: '#BB86FC'\n      },\n      action: {\n        active: '#e3e3e3',\n        disabledBackground: '#BB86FC',\n      },\n      divider: \"#BB86FC\",\n      searchfield: '#2f2f2f',\n    },\n\n\n  });\n\n  const theme = createMuiTheme({});\n\n  return (\n\n    <MuiThemeProvider theme={lightTheme}>\n      <CssBaseline />\n      <Helmet>\n        <title>OMDb Movies</title>\n      </Helmet>\n      {/* <SearchAppBar setSearchTerm={setSearchTerm} /> */}\n      <Box>\n        <Grid container direction=\"row\" alignItems=\"stretch\">\n          <Grid item xs={12}>\n            <SearchField\n              landing={landing}\n              onHomeClick={handleHomeClick}\n              setSearchTerm={setSearchTerm}\n            />\n\n          </Grid>\n          <Grid item xs={1} />\n          {landing ? (null) : (\n            <>\n              <Grid item container xs={7} alignItems=\"stretch\" >\n                <SearchResults\n                  searchTerm={searchTerm}\n                  onNominateClicked={nominateMovie}\n                  nominatedMoviesList={nominatedMoviesList} />\n\n              </Grid>\n              <Grid item container direction=\"row\" xs={3} spacing={2} alignItems=\"stretch\">\n                <NominatedMovies\n                  movies={nominatedMoviesList}\n                  setNominationsCompleted={setOpenNominationsDialog}\n                  onRemoveNominationClicked={removeNomination}\n                />\n\n              </Grid>\n              <Grid item xs={1} />\n            </>\n          )}\n\n        </Grid>\n      </Box >\n      <AlertDialog\n        hideButton={nominationsVisible}\n        open={nominationsCompleted}\n        nominations={nominatedMoviesList}\n      />\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}