{"version":3,"sources":["components/AlertDialog.js","components/NominatedMovieCard.js","components/NominatedMovies.js","components/PageControl.js","components/SearchAppBar.js","components/SearchResultCard.js","components/SearchResults.js","App.js","reportWebVitals.js","index.js"],"names":["AlertDialog","props","React","useState","open","setOpen","handleClose","useEffect","nominations","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","map","movie","index","DialogContentText","Title","DialogActions","Button","onClick","color","useStyles","makeStyles","theme","root","display","details","flexDirection","content","flex","height","title","cover","width","controls","alignItems","paddingLeft","spacing","playIcon","NominatedMovieCard","classes","useTheme","Card","className","CardMedia","image","Poster","imdbID","CardContent","Typography","component","variant","Year","IconButton","aria-label","onRemoveNominationClicked","resultEntry","maxWidth","backgroundColor","palette","background","black","maxHeight","overflow","removeNominationButton","NominatedMovies","Box","movies","pageControlStyles","paper","position","minHeight","nextPageFab","common","white","grey","bottom","right","pageIndicatorFab","prevPageFab","PageControl","pageCtrlDialogVisible","setPageCtrlVisibility","inputtedPageNumDialog","setInputtedPageNumDialog","pageError","setPageError","pageErrorText","setPageErrorText","handlePageCtrlClose","fabs","icon","label","clickHandler","event","newPageCount","currentPage","maxPages","setCurrentPage","console","log","minPages","fab","Fab","id","TextField","autoFocus","margin","type","fullWidth","error","helperText","onChange","target","value","onKeyDown","key","preventDefault","InputProps","startAdornment","InputAdornment","flexGrow","appBar","movieIcon","fontSize","marginRight","paddingTop","paddingBottom","paddingRight","breakpoints","up","search","borderRadius","shape","fade","marginLeft","searchIcon","padding","pointerEvents","justifyContent","inputRoot","inputInput","transition","transitions","create","SearchAppBar","AppBar","Toolbar","noWrap","InputBase","placeholder","input","inputProps","setSearchTerm","SearchResultCard","disabled","disableNominate","onNominateClicked","SearchResults","setMovies","searchTerm","searchMovieRequest","a","url","fetch","response","json","responseJson","Search","totalResults","parseInt","nominatedMoviesList","i","length","j","iter","maxPagesCalc","Math","ceil","setMaxPages","Grid","container","item","App","searchResultsVisible","setSearchResultsVisibility","nominationsVisible","setNominationsVisibility","setNominatedMoviesList","nominationsCompleted","setNomCompleted","nominatedMovies","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","createMuiTheme","ThemeProvider","direction","xs","maxNominations","newNominationsList","filter","hideButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79e07c2f.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst AlertDialog = (props) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if (props.open === true) {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  }, [props.open, props.nominations]);\n\n  return (\n    <div>\n      {/* {props.hideButton ? (\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          SUBMIT\n        </Button>\n      ) : null} */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle>{\"Nominations Submitted\"}</DialogTitle>\n        <DialogContent>\n          {props.nominations.map((movie, index) => {\n            return (\n              <DialogContentText>\n                {index + 1}. {movie.Title}\n              </DialogContentText>\n            );\n          })}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            CLOSE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AlertDialog;\n","import { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport React from \"react\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n    height: 100,\n  },\n  title: {\n    // width: 140,\n  },\n  cover: {\n    width: 151,\n    height: 170,\n    // width: \"100%\",\n    // height: \"100%\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(100),\n    // paddingBottom: theme.spacing(0),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\nconst NominatedMovieCard = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        className={classes.cover}\n        image={props.movie.Poster}\n        title={props.movie.imdbID}\n      />\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography className={classes.title} component=\"h5\" variant=\"h5\">\n            {props.movie.Title}\n            {/* Live from space */}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {props.movie.Year}\n          </Typography>\n        </CardContent>\n        <div className={classes.controls}>\n          <IconButton\n            aria-label=\"nominate\"\n            onClick={() => {\n              props.onRemoveNominationClicked(props.movie);\n            }}\n          >\n            <RemoveIcon />\n          </IconButton>\n        </div>\n      </div>\n    </Card>\n  );\n};\nexport default NominatedMovieCard;\n","import Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport NominatedMovieCard from \"./NominatedMovieCard\";\nimport React from \"react\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  resultEntry: {\n    alignItems: \"flex-start\",\n  },\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.black,\n    maxHeight: \"100%\",\n    overflow: \"auto\",\n  },\n  removeNominationButton: {\n    color: \"red\",\n  },\n}));\n\nconst NominatedMovies = (props) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box>\n        {props.movies.map((movie, index) => {\n          return (\n            <NominatedMovieCard\n              movie={movie}\n              onRemoveNominationClicked={props.onRemoveNominationClicked}\n            ></NominatedMovieCard>\n          );\n        })}\n      </Box>\n    </>\n  );\n};\n\nexport default NominatedMovies;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport Button from \"@material-ui/core/Button\";\nimport ChevronLeftOutlinedIcon from \"@material-ui/icons/ChevronLeftOutlined\";\nimport ChevronRightOutlinedIcon from \"@material-ui/icons/ChevronRightOutlined\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Fab from \"@material-ui/core/Fab\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { grey } from \"@material-ui/core/colors\";\n\nconst pageControlStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 600,\n    position: \"relative\",\n    minHeight: 200,\n  },\n  nextPageFab: {\n    position: \"absolute\",\n    color: theme.palette.common.white,\n    backgroundColor: grey[900],\n    \"&:hover\": {\n      backgroundColor: \"#f50057\",\n    },\n    bottom: theme.spacing(1),\n    right: theme.spacing(190),\n  },\n  pageIndicatorFab: {\n    position: \"absolute\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(198),\n  },\n  prevPageFab: {\n    position: \"absolute\",\n    color: theme.palette.common.white,\n    backgroundColor: grey[900],\n    \"&:hover\": {\n      backgroundColor: \"#f50057\",\n    },\n    bottom: theme.spacing(1),\n    right: theme.spacing(206),\n  },\n}));\n\nconst PageControl = (props) => {\n  const classes = pageControlStyles();\n\n  const [pageCtrlDialogVisible, setPageCtrlVisibility] = useState(false);\n  // Keeps track of the page number that the user inputs in the page control dialog\n  const [inputtedPageNumDialog, setInputtedPageNumDialog] = useState(1);\n\n  // If the user inputs a page thats out of range pageError becomes true\n  const [pageError, setPageError] = useState(false);\n  // Text that tells user whats wrong with the page number they entered\n  const [pageErrorText, setPageErrorText] = useState(\"\");\n\n  const handlePageCtrlClose = () => {\n    setPageCtrlVisibility(false);\n  };\n\n  const handlePageCtrlDialogChange = (event) => {\n    if (\n      props.minPages <= event.target.value &&\n      event.target.value <= props.maxPages\n    ) {\n      setInputtedPageNumDialog(event.target.value);\n      setPageError(false);\n      setPageErrorText(\"\");\n    } else {\n      setPageError(true);\n      setPageErrorText(\n        `Input a page number between ${props.minPages}-${props.maxPages}`\n      );\n    }\n  };\n\n  const handlePageCtrlDialogKeyPresses = (event) => {\n    if (event.key === \"Enter\") {\n      // Jumps to the page the user types on enter key pressed\n      if (!pageError) {\n        // Hide the dialog after enter key\n        setPageCtrlVisibility(false);\n        // The user typed a valid page number to jump to in the dialog\n        // so set that valid page number as the current page number\n        props.setCurrentPage(inputtedPageNumDialog);\n        event.preventDefault();\n      }\n    }\n  };\n\n  // currentPage is an integer indicating current page number\n  var fabs = [\n    {\n      color: \"inherit\",\n      className: classes.nextPageFab,\n      icon: <ChevronRightOutlinedIcon />,\n      label: \"Next\",\n      clickHandler: (event) => {\n        var newPageCount = props.currentPage + 1;\n        if (newPageCount <= props.maxPages) {\n          props.setCurrentPage(newPageCount);\n          console.log(\"Current page changed \", props.currentPage);\n        }\n      },\n    },\n    {\n      color: \"secondary\",\n      className: classes.pageIndicatorFab,\n      icon: `${props.currentPage}/${props.maxPages}`,\n      label: `${props.currentPage}/${props.maxPages}`,\n      clickHandler: (event) => {\n        // Show page control dialog if this button is clicked\n        setPageCtrlVisibility(true);\n      },\n    },\n    {\n      color: \"inherit\",\n      className: classes.prevPageFab,\n      icon: <ChevronLeftOutlinedIcon />,\n      label: \"Prev\",\n      clickHandler: (event) => {\n        var newPageCount = props.currentPage - 1;\n        if (newPageCount >= props.minPages) {\n          props.setCurrentPage(newPageCount);\n          console.log(\"prev current page changed \", newPageCount);\n        }\n      },\n    },\n  ];\n\n  return (\n    <>\n      {fabs.map((fab, index) => (\n        <Fab\n          aria-label={fab.label}\n          className={fab.className}\n          color={fab.color}\n          onClick={fab.clickHandler}\n        >\n          {fab.icon}\n        </Fab>\n      ))}\n      <Dialog\n        open={pageCtrlDialogVisible}\n        onClose={handlePageCtrlClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Enter Page Number</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"pageNumber\"\n            label=\"Page Number\"\n            type=\"number\"\n            fullWidth\n            error={pageError}\n            helperText={pageErrorText}\n            onChange={handlePageCtrlDialogChange}\n            onKeyDown={handlePageCtrlDialogKeyPresses}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <FileCopyIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handlePageCtrlClose} color=\"primary\">\n            CLOSE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default PageControl;\n","import { fade, makeStyles } from \"@material-ui/core/styles\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport MovieCreationOutlinedIcon from \"@material-ui/icons/MovieCreationOutlined\";\nimport React from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: \"#181818\",\n  },\n  movieIcon: {\n    fontSize: \"250%\",\n    color: \"#ff316f\",\n    marginRight: theme.spacing(2),\n    // marginBottom: 0,\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingRight: 0,\n  },\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nconst SearchAppBar = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <MovieCreationOutlinedIcon className={classes.movieIcon} />\n\n          <Typography\n            className={classes.title}\n            variant=\"h6\"\n            noWrap\n          ></Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={(event) => props.setSearchTerm(event.target.value)}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default SearchAppBar;\n","import AddIcon from \"@material-ui/icons/Add\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n    height: 100,\n  },\n  title: {\n    width: 140,\n  },\n  cover: {\n    width: 151,\n    height: 170,\n    // width: \"100%\",\n    // height: \"100%\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(15),\n    // paddingBottom: theme.spacing(0),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\nconst SearchResultCard = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        className={classes.cover}\n        image={props.movie.Poster}\n        title={props.movie.imdbID}\n      />\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography className={classes.title} component=\"h5\" variant=\"h5\">\n            {props.movie.Title}\n            {/* Live from space */}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {props.movie.Year}\n          </Typography>\n        </CardContent>\n        <div className={classes.controls}>\n          <IconButton\n            aria-label=\"nominate\"\n            disabled={props.movie.disableNominate}\n            onClick={() => {\n              props.onNominateClicked(props.movie);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </div>\n      </div>\n    </Card>\n  );\n};\nexport default SearchResultCard;\n","import React, { useEffect, useState } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport SearchResultCard from \"./SearchResultCard\";\n\nconst SearchResults = (props) => {\n  const [movies, setMovies] = useState([]);\n\n  // This gets run everytime the state of searchTerm changes\n  useEffect(() => {\n    console.log(\"Search term was changed, \", props.searchTerm);\n    searchMovieRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.searchTerm, props.currentPage]);\n\n  const searchMovieRequest = async () => {\n    const url =\n      \"https://www.omdbapi.com/?s=\" +\n      props.searchTerm +\n      \"&apikey=a7d62505\" +\n      \"&page=\" +\n      props.currentPage;\n    const response = await fetch(url);\n\n    const responseJson = await response.json();\n\n    // If search results returned are not empty\n    if (responseJson.Search) {\n      var totalResults = parseInt(responseJson.totalResults);\n\n      // Additionally if we get a list of alreadyNominated movies\n      // we need to disable the movies in that list so they can't be nominated again\n      if (props.nominatedMoviesList) {\n        for (var i = 0; i < responseJson.Search.length; i++) {\n          responseJson.Search[i].disableNominate = false;\n          for (var j = 0; j < props.nominatedMoviesList.length; j++) {\n            console.log(\n              \"Search id \",\n              responseJson.Search[i].imdbID,\n              \" storageid \",\n              props.nominatedMoviesList[j].imdbID\n            );\n            if (\n              responseJson.Search[i].imdbID ===\n              props.nominatedMoviesList[j].imdbID\n            ) {\n              console.log(\"Disabled comparison succeeded \");\n              responseJson.Search[i].disableNominate = true;\n            }\n          }\n        }\n      } else {\n        for (var iter = 0; iter < responseJson.Search.length; iter++) {\n          responseJson.Search[iter].disableNominate = false;\n        }\n      }\n\n      setMovies(responseJson.Search);\n      // Calculation to determine how many pages there will be in total\n      // based on totalResults\n      // responseJson.Search.length is how many cards there are page, i.e.\n      // how many results get returned by page\n      var maxPagesCalc = Math.ceil(totalResults / 10);\n      props.setMaxPages(maxPagesCalc);\n    }\n  };\n\n  return (\n    <Grid container>\n      {movies.map((movie, index) => {\n        return (\n          <Grid item>\n            <SearchResultCard\n              movie={movie}\n              onNominateClicked={props.onNominateClicked}\n            />\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default SearchResults;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport AlertDialog from \"./components/AlertDialog\";\nimport { Box } from \"@material-ui/core\";\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Fab from \"@material-ui/core/Fab\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport Grid from \"@material-ui/core/Grid\";\nimport NominatedMovies from \"./components/NominatedMovies\";\nimport PageControl from \"./components/PageControl\";\nimport SearchAppBar from \"./components/SearchAppBar\";\nimport SearchResults from \"./components/SearchResults\";\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResultsVisible, setSearchResultsVisibility] = useState(false);\n  const [nominationsVisible, setNominationsVisibility] = useState(false);\n\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [nominatedMoviesList, setNominatedMoviesList] = useState([]);\n  const [maxPages, setMaxPages] = useState(1);\n\n  const [nominationsCompleted, setNomCompleted] = useState(false);\n  const maxNominations = 5;\n\n  const [showMovieMoreInfo, setShowMovieMoreInfo] = useState(false);\n  // The movie to display in more info section\n  const [movie4MoreInfo, setMovie4MoreInfo] = useState({});\n  // This only gets run when the app loads initially for the first time\n\n  const onSearchEntryClicked = (movie) => {\n    setMovie4MoreInfo(movie);\n    setShowMovieMoreInfo(true);\n  };\n\n  useEffect(() => {\n    const nominatedMovies = JSON.parse(\n      localStorage.getItem(\"omdb-app-nominations\")\n    );\n    console.log(\"Nominated movies local storage \", nominatedMovies);\n    // If we have nothing in local storage our array can be none\n    // so to avoid that we check if its before setting the state of nominated nominated movies\n    // from local storage\n    if (nominatedMovies) {\n      setNominatedMoviesList(nominatedMovies);\n    }\n  }, []);\n\n  useEffect(() => {\n    // Search term has changed, if it's more than 3 characters show search results\n    if (searchTerm.length >= 3) {\n      setSearchResultsVisibility(true);\n    } else if (searchTerm.length === 0) {\n      setSearchResultsVisibility(false);\n    }\n    if (nominatedMoviesList.length > 0) {\n      setNominationsVisibility(true);\n    }\n  }, [searchTerm, nominatedMoviesList]);\n\n  const nominateMovie = (movie) => {\n    if (nominatedMoviesList.length < maxNominations - 1) {\n      movie.disableNominate = true;\n      const newNominationsList = [...nominatedMoviesList, movie];\n      setNominatedMoviesList(newNominationsList);\n      saveToLocalStorage(newNominationsList);\n    } else if (nominatedMoviesList.length === maxNominations - 1) {\n      movie.disableNominate = true;\n      const newNominationsList = [...nominatedMoviesList, movie];\n      setNominatedMoviesList(newNominationsList);\n      saveToLocalStorage(newNominationsList);\n      setNomCompleted(true);\n    } else {\n      setNomCompleted(true);\n    }\n  };\n\n  const removeNomination = (movie) => {\n    movie.disableNominate = false;\n    const newNominationsList = nominatedMoviesList.filter(\n      (nominatedMoviesList) => nominatedMoviesList.imdbID !== movie.imdbID\n    );\n    setNomCompleted(false);\n    setNominatedMoviesList(newNominationsList);\n    saveToLocalStorage(newNominationsList);\n  };\n\n  const saveToLocalStorage = (items) => {\n    localStorage.setItem(\"omdb-app-nominations\", JSON.stringify(items));\n  };\n\n  const theme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n    },\n  });\n\n  return (\n    // Use bootstrap styles for root container\n    <ThemeProvider theme={theme}>\n      <SearchAppBar setSearchTerm={setSearchTerm} />\n      <Grid container direction=\"row\">\n        <Grid item container direction=\"column\" xs={5}>\n          <Grid item>\n            {searchResultsVisible ? (\n              <SearchResults\n                searchTerm={searchTerm}\n                currentPage={currentPage}\n                setMaxPages={setMaxPages}\n                onNominateClicked={nominateMovie}\n                nominatedMoviesList={nominatedMoviesList}\n              ></SearchResults>\n            ) : null}\n          </Grid>\n        </Grid>\n        <Grid item xs={6}>\n          <NominatedMovies\n            movies={nominatedMoviesList}\n            onRemoveNominationClicked={removeNomination}\n          />\n        </Grid>\n      </Grid>\n      <PageControl\n        maxPages={maxPages}\n        minPages={1}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      ></PageControl>\n      <AlertDialog\n        hideButton={nominationsVisible}\n        open={nominationsCompleted}\n        nominations={nominatedMoviesList}\n      />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}