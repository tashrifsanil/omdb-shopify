{"version":3,"sources":["components/AlertDialog.js","resources/icons/imdbIcon.svg","components/MovieMoreInfo.js","components/NominatedMovieCard.js","components/NominatedMovies.js","components/PageControl.js","components/SearchAppBar.js","components/SearchResultCard.js","components/SearchResults.js","App.js","reportWebVitals.js","index.js"],"names":["AlertDialog","props","React","useState","open","setOpen","handleClose","useEffect","nominations","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","map","movie","index","DialogContentText","Title","DialogActions","Button","onClick","color","useStyles","makeStyles","theme","root","flexGrow","paddingBottom","moveMoreInfo","padding","spacing","maxWidth","image","justifyContent","maxHeight","img","margin","display","rating","backgroundColor","palette","info","main","width","fontSize","cover","fallbackPoster","height","ratingMargin","imdbLink","warning","light","MovieMoreInfo","classes","additionalMovieData","setAdditionalMovieData","setImdbID","getAdditionalMovieData","a","console","log","url","imdbID","fetch","response","json","responseJson","visible","Card","className","Grid","container","direction","fullWidth","justify","item","xs","Poster","src","alt","Typography","variant","Year","Genre","Language","Country","Fab","size","Metascore","Rated","href","imdbIcon","Actors","Writers","paragraph","Plot","details","flexDirection","content","flex","title","controls","alignItems","paddingLeft","removeNominationButton","removeNominationIcon","error","NominatedMovieCard","useTheme","CardMedia","CardContent","component","IconButton","aria-label","onRemoveNominationClicked","resultEntry","background","black","overflow","NominatedMovies","Box","movies","pageControlStyles","paper","position","minHeight","nextPageFab","common","white","grey","bottom","right","pageIndicatorFab","prevPageFab","PageControl","pageCtrlDialogVisible","setPageCtrlVisibility","inputtedPageNumDialog","setInputtedPageNumDialog","pageError","setPageError","pageErrorText","setPageErrorText","handlePageCtrlClose","fabs","icon","label","clickHandler","event","newPageCount","currentPage","maxPages","setCurrentPage","minPages","fab","id","TextField","autoFocus","type","helperText","onChange","target","value","onKeyDown","key","preventDefault","InputProps","startAdornment","InputAdornment","appBar","movieIcon","marginRight","paddingTop","paddingRight","breakpoints","up","search","borderRadius","shape","fade","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","SearchAppBar","AppBar","Toolbar","noWrap","InputBase","placeholder","input","inputProps","setSearchTerm","secondary","nominateButtton","SearchResultCard","onSearchEntryClicked","disabled","disableNominate","onNominateClicked","SearchResults","setMovies","searchTerm","searchMovieRequest","nominatedMoviesList","Search","totalResults","parseInt","i","length","j","iter","maxPagesCalc","Math","ceil","setMaxPages","nominationsHeader","fontFamily","App","searchResultsVisible","setSearchResultsVisibility","nominationsVisible","setNominationsVisibility","setNominatedMoviesList","nominationsCompleted","setNomCompleted","showMovieMoreInfo","setShowMovieMoreInfo","movie4MoreInfo","setMovie4MoreInfo","nominatedMovies","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","createMuiTheme","ThemeProvider","Helmet","maxNominations","newNominationsList","filter","hideButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bdbd0b6.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst AlertDialog = (props) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if (props.open === true) {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  }, [props.open, props.nominations]);\n\n  return (\n    <div>\n      {/* {props.hideButton ? (\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          SUBMIT\n        </Button>\n      ) : null} */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle>{\"Nominations Submitted\"}</DialogTitle>\n        <DialogContent>\n          {props.nominations.map((movie, index) => {\n            return (\n              <DialogContentText>\n                {index + 1}. {movie.Title}\n              </DialogContentText>\n            );\n          })}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            CLOSE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AlertDialog;\n","export default __webpack_public_path__ + \"static/media/imdbIcon.b9cd8583.svg\";","import React, { useEffect } from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TheatersIcon from \"@material-ui/icons/Theaters\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport Typography from \"@material-ui/core/Typography\";\nimport imdbIcon from \"../resources/icons/imdbIcon.svg\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    paddingBottom: \"5%\",\n  },\n  moveMoreInfo: {\n    padding: theme.spacing(2),\n    maxWidth: \"md\",\n  },\n  image: {\n    justifyContent: \"space-evenly\",\n    maxWidth: 200,\n    maxHeight: 300,\n  },\n  img: {\n    justifyContent: \"space-evenly\",\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n  rating: {\n    backgroundColor: theme.palette.info.main,\n    width: \"20%\",\n    fontSize: \"100%\",\n  },\n  cover: {\n    width: \"100%\",\n  },\n  fallbackPoster: {\n    fontSize: \"100%\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  ratingMargin: {\n    margin: theme.spacing(1),\n  },\n  imdbLink: {\n    maxWidth: 50,\n    // height: \"60%\",\n    backgroundColor: theme.palette.warning.light,\n    color: \"black\",\n  },\n}));\n\nconst MovieMoreInfo = (props) => {\n  const classes = useStyles();\n\n  const [additionalMovieData, setAdditionalMovieData] = React.useState({});\n  const [imdbID, setImdbID] = React.useState(\"\");\n\n  const getAdditionalMovieData = async () => {\n    console.log(\"Get additional data \");\n    const url =\n      \"https://www.omdbapi.com/?i=\" +\n      props.movie.imdbID +\n      \"&apikey=a7d62505&plot=full\";\n    const response = await fetch(url);\n    const responseJson = await response.json();\n\n    setAdditionalMovieData(responseJson);\n  };\n\n  useEffect(() => {\n    if (props.movie) {\n      setImdbID(props.movie.imdbID);\n      getAdditionalMovieData();\n    } else {\n    }\n  }, [props.movie]);\n\n  return (\n    <>\n      {props.visible ? (\n        <Card className={classes.root}>\n          <Grid\n            container\n            direction=\"row\"\n            fullWidth={true}\n            spacing={2}\n            justify=\"space-evenly\"\n          >\n            <Grid item xs={4}>\n              {props.movie.Poster !== \"N/A\" ? (\n                <img\n                  className={classes.cover}\n                  src={props.movie.Poster}\n                  alt=\"\"\n                />\n              ) : (\n                <TheatersIcon className={classes.fallbackPoster} />\n              )}\n            </Grid>\n            <Grid item container xs={8}>\n              <Grid item xs={8}>\n                <Typography variant=\"h4\">{props.movie.Title}</Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography variant=\"h6\">{props.movie.Year}</Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography variant=\"button\" color=\"secondary\">\n                  {additionalMovieData.Genre}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography variant=\"subtitle1\">\n                  Languages: {additionalMovieData.Language}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography variant=\"subtitle1\">\n                  Country: {additionalMovieData.Country}\n                </Typography>\n              </Grid>\n              <Grid item container xs={8}>\n                <Grid item>\n                  <Fab\n                    variant=\"extended\"\n                    size=\"small\"\n                    color=\"primary\"\n                    className={classes.rating}\n                  >\n                    <ThumbUpIcon className={classes.ratingMargin} />\n                    {additionalMovieData.Metascore}\n                    {additionalMovieData.Metascore !== \"N/A\" ? \"/100\" : null}\n                  </Fab>\n                  <Fab\n                    variant=\"extended\"\n                    size=\"small\"\n                    color=\"secondary\"\n                    className={classes.ratingMargin}\n                  >\n                    {additionalMovieData.Rated}\n                  </Fab>\n\n                  <a href={`https://www.imdb.com/title/${props.movie.imdbID}`}>\n                    <img src={imdbIcon} className={classes.imdbLink}></img>\n                  </a>\n                </Grid>\n              </Grid>\n              <Grid item xs={8}>\n                Actors:{\" \"}\n                <Typography variant=\"button\">\n                  {additionalMovieData.Actors}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography variant=\"button\" color=\"secondary\"></Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography variant=\"body\">\n                  {additionalMovieData.Writers}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid item></Grid>\n            <Grid item container xs={11} spacing={2}>\n              <Typography variant=\"h4\">Plot</Typography>\n              <Grid item>\n                <Typography variant=\"body\" paragraph={true}>\n                  {additionalMovieData.Plot}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Card>\n      ) : null}\n    </>\n  );\n};\n\nexport default MovieMoreInfo;\n","import { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport React from \"react\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"97%\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n    height: 100,\n  },\n  title: {\n    // width: 140,\n  },\n  cover: {\n    width: 151,\n    height: 170,\n    // width: \"100%\",\n    // height: \"100%\",\n  },\n  controls: {\n    // justify: \"flex-end\",\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  removeNominationButton: {\n    justify: \"flex-end\",\n  },\n  removeNominationIcon: {\n    color: theme.palette.error.main,\n  },\n}));\n\nconst NominatedMovieCard = (props) => {\n  const classes = useStyles();\n  // eslint-disable-next-line no-unused-vars\n  const theme = useTheme();\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        className={classes.cover}\n        image={props.movie.Poster}\n        title={props.movie.imdbID}\n      />\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography className={classes.title} component=\"h5\" variant=\"h5\">\n            {props.movie.Title}\n            {/* Live from space */}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {props.movie.Year}\n          </Typography>\n        </CardContent>\n        <div className={classes.controls}>\n          <IconButton\n            className={classes.removeNominationButton}\n            aria-label=\"nominate\"\n            onClick={() => {\n              props.onRemoveNominationClicked(props.movie);\n            }}\n          >\n            <RemoveCircleIcon className={classes.removeNominationIcon} />\n          </IconButton>\n        </div>\n      </div>\n    </Card>\n  );\n};\nexport default NominatedMovieCard;\n","import Box from \"@material-ui/core/Box\";\nimport NominatedMovieCard from \"./NominatedMovieCard\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  resultEntry: {\n    alignItems: \"flex-start\",\n  },\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.black,\n    maxHeight: \"100%\",\n    overflow: \"auto\",\n  },\n  removeNominationButton: {\n    color: \"red\",\n  },\n}));\n\nconst NominatedMovies = (props) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box>\n        {props.movies.map((movie, index) => {\n          return (\n            <NominatedMovieCard\n              movie={movie}\n              onRemoveNominationClicked={props.onRemoveNominationClicked}\n            ></NominatedMovieCard>\n          );\n        })}\n      </Box>\n    </>\n  );\n};\n\nexport default NominatedMovies;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport Button from \"@material-ui/core/Button\";\nimport ChevronLeftOutlinedIcon from \"@material-ui/icons/ChevronLeftOutlined\";\nimport ChevronRightOutlinedIcon from \"@material-ui/icons/ChevronRightOutlined\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Fab from \"@material-ui/core/Fab\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { grey } from \"@material-ui/core/colors\";\n\nconst pageControlStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 600,\n    position: \"relative\",\n    minHeight: 200,\n  },\n  nextPageFab: {\n    position: \"absolute\",\n    color: theme.palette.common.white,\n    backgroundColor: grey[900],\n    \"&:hover\": {\n      backgroundColor: \"#f50057\",\n    },\n    bottom: theme.spacing(1),\n    right: theme.spacing(190),\n  },\n  pageIndicatorFab: {\n    position: \"absolute\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(198),\n  },\n  prevPageFab: {\n    position: \"absolute\",\n    color: theme.palette.common.white,\n    backgroundColor: grey[900],\n    \"&:hover\": {\n      backgroundColor: \"#f50057\",\n    },\n    bottom: theme.spacing(1),\n    right: theme.spacing(206),\n  },\n}));\n\nconst PageControl = (props) => {\n  const classes = pageControlStyles();\n\n  const [pageCtrlDialogVisible, setPageCtrlVisibility] = useState(false);\n  // Keeps track of the page number that the user inputs in the page control dialog\n  const [inputtedPageNumDialog, setInputtedPageNumDialog] = useState(1);\n\n  // If the user inputs a page thats out of range pageError becomes true\n  const [pageError, setPageError] = useState(false);\n  // Text that tells user whats wrong with the page number they entered\n  const [pageErrorText, setPageErrorText] = useState(\"\");\n\n  const handlePageCtrlClose = () => {\n    setPageCtrlVisibility(false);\n  };\n\n  const handlePageCtrlDialogChange = (event) => {\n    if (\n      props.minPages <= event.target.value &&\n      event.target.value <= props.maxPages\n    ) {\n      setInputtedPageNumDialog(event.target.value);\n      setPageError(false);\n      setPageErrorText(\"\");\n    } else {\n      setPageError(true);\n      setPageErrorText(\n        `Input a page number between ${props.minPages}-${props.maxPages}`\n      );\n    }\n  };\n\n  const handlePageCtrlDialogKeyPresses = (event) => {\n    if (event.key === \"Enter\") {\n      // Jumps to the page the user types on enter key pressed\n      if (!pageError) {\n        // Hide the dialog after enter key\n        setPageCtrlVisibility(false);\n        // The user typed a valid page number to jump to in the dialog\n        // so set that valid page number as the current page number\n        props.setCurrentPage(inputtedPageNumDialog);\n        event.preventDefault();\n      }\n    }\n  };\n\n  // currentPage is an integer indicating current page number\n  var fabs = [\n    {\n      color: \"inherit\",\n      className: classes.nextPageFab,\n      icon: <ChevronRightOutlinedIcon />,\n      label: \"Next\",\n      clickHandler: (event) => {\n        var newPageCount = props.currentPage + 1;\n        if (newPageCount <= props.maxPages) {\n          props.setCurrentPage(newPageCount);\n          console.log(\"Current page changed \", props.currentPage);\n        }\n      },\n    },\n    {\n      color: \"secondary\",\n      className: classes.pageIndicatorFab,\n      icon: `${props.currentPage}/${props.maxPages}`,\n      label: `${props.currentPage}/${props.maxPages}`,\n      clickHandler: (event) => {\n        // Show page control dialog if this button is clicked\n        setPageCtrlVisibility(true);\n      },\n    },\n    {\n      color: \"inherit\",\n      className: classes.prevPageFab,\n      icon: <ChevronLeftOutlinedIcon />,\n      label: \"Prev\",\n      clickHandler: (event) => {\n        var newPageCount = props.currentPage - 1;\n        if (newPageCount >= props.minPages) {\n          props.setCurrentPage(newPageCount);\n          console.log(\"prev current page changed \", newPageCount);\n        }\n      },\n    },\n  ];\n\n  return (\n    <>\n      {fabs.map((fab, index) => (\n        <Fab\n          aria-label={fab.label}\n          className={fab.className}\n          color={fab.color}\n          onClick={fab.clickHandler}\n        >\n          {fab.icon}\n        </Fab>\n      ))}\n      <Dialog\n        open={pageCtrlDialogVisible}\n        onClose={handlePageCtrlClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Enter Page Number</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"pageNumber\"\n            label=\"Page Number\"\n            type=\"number\"\n            fullWidth\n            error={pageError}\n            helperText={pageErrorText}\n            onChange={handlePageCtrlDialogChange}\n            onKeyDown={handlePageCtrlDialogKeyPresses}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <FileCopyIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handlePageCtrlClose} color=\"primary\">\n            CLOSE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default PageControl;\n","import { fade, makeStyles } from \"@material-ui/core/styles\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport MovieCreationOutlinedIcon from \"@material-ui/icons/MovieCreationOutlined\";\nimport React from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: \"#181818\",\n  },\n  movieIcon: {\n    fontSize: \"250%\",\n    color: \"#ff316f\",\n    marginRight: theme.spacing(2),\n    // marginBottom: 0,\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingRight: 0,\n  },\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nconst SearchAppBar = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <MovieCreationOutlinedIcon className={classes.movieIcon} />\n\n          <Typography\n            className={classes.title}\n            variant=\"h6\"\n            noWrap\n          ></Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={(event) => props.setSearchTerm(event.target.value)}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default SearchAppBar;\n","import AddIcon from \"@material-ui/icons/Add\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.main,\n    },\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n    height: 100,\n  },\n  title: {\n    width: 140,\n  },\n  cover: {\n    width: 151,\n    height: 170,\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(15),\n  },\n  nominateButtton: {\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n    },\n  },\n}));\n\nconst SearchResultCard = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={classes.root}\n      onClick={() => {\n        console.log(\"Search card clicked\");\n        props.onSearchEntryClicked(props.movie);\n      }}\n    >\n      <CardMedia\n        className={classes.cover}\n        image={props.movie.Poster}\n        title={props.movie.imdbID}\n      />\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography className={classes.title} component=\"h5\" variant=\"h5\">\n            {props.movie.Title}\n            {/* Live from space */}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {props.movie.Year}\n          </Typography>\n        </CardContent>\n        <div className={classes.controls}>\n          <IconButton\n            className={classes.nominateButtton}\n            aria-label=\"nominate\"\n            disabled={props.movie.disableNominate}\n            onClick={() => {\n              props.onNominateClicked(props.movie);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </div>\n      </div>\n    </Card>\n  );\n};\nexport default SearchResultCard;\n","import React, { useEffect, useState } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport SearchResultCard from \"./SearchResultCard\";\n\nconst SearchResults = (props) => {\n  const [movies, setMovies] = useState([]);\n\n  // This gets run everytime the state of searchTerm changes\n  useEffect(() => {\n    console.log(\"Search term was changed, \", props.searchTerm);\n    searchMovieRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.searchTerm, props.currentPage, props.nominatedMoviesList]);\n\n  const searchMovieRequest = async () => {\n    const url =\n      \"https://www.omdbapi.com/?s=\" +\n      props.searchTerm +\n      \"&apikey=a7d62505\" +\n      \"&page=\" +\n      props.currentPage;\n    const response = await fetch(url);\n\n    const responseJson = await response.json();\n\n    // If search results returned are not empty\n    if (responseJson.Search) {\n      var totalResults = parseInt(responseJson.totalResults);\n\n      // Additionally if we get a list of alreadyNominated movies\n      // we need to disable the movies in that list so they can't be nominated again\n      if (props.nominatedMoviesList) {\n        for (var i = 0; i < responseJson.Search.length; i++) {\n          responseJson.Search[i].disableNominate = false;\n          for (var j = 0; j < props.nominatedMoviesList.length; j++) {\n            console.log(\n              \"Search id \",\n              responseJson.Search[i].imdbID,\n              \" storageid \",\n              props.nominatedMoviesList[j].imdbID\n            );\n            if (\n              responseJson.Search[i].imdbID ===\n              props.nominatedMoviesList[j].imdbID\n            ) {\n              console.log(\"Disabled comparison succeeded \");\n              responseJson.Search[i].disableNominate = true;\n            }\n          }\n        }\n      } else {\n        for (var iter = 0; iter < responseJson.Search.length; iter++) {\n          responseJson.Search[iter].disableNominate = false;\n        }\n      }\n\n      setMovies(responseJson.Search);\n      // Calculation to determine how many pages there will be in total\n      // based on totalResults\n      // responseJson.Search.length is how many cards there are page, i.e.\n      // how many results get returned by page\n      var maxPagesCalc = Math.ceil(totalResults / 10);\n      props.setMaxPages(maxPagesCalc);\n    }\n  };\n\n  return (\n    <Grid container>\n      {movies.map((movie, index) => {\n        return (\n          <Grid item>\n            <SearchResultCard\n              movie={movie}\n              onSearchEntryClicked={props.onSearchEntryClicked}\n              onNominateClicked={props.onNominateClicked}\n            />\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default SearchResults;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport \"fontsource-roboto\";\nimport \"@fontsource/open-sans\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport AlertDialog from \"./components/AlertDialog\";\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport Grid from \"@material-ui/core/Grid\";\nimport MovieMoreInfo from \"./components/MovieMoreInfo\";\nimport NominatedMovies from \"./components/NominatedMovies\";\nimport PageControl from \"./components/PageControl\";\nimport SearchAppBar from \"./components/SearchAppBar\";\nimport SearchResults from \"./components/SearchResults\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Helmet } from 'react-helmet';\n\nconst useStyles = makeStyles((theme) => ({\n  nominationsHeader: {\n    paddingLeft: \"1%\",\n    fontFamily: \"Open Sans Light\",\n    width: \"100%\",\n  },\n}));\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResultsVisible, setSearchResultsVisibility] = useState(false);\n  const [nominationsVisible, setNominationsVisibility] = useState(false);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [nominatedMoviesList, setNominatedMoviesList] = useState([]);\n  const [maxPages, setMaxPages] = useState(1);\n\n  const [nominationsCompleted, setNomCompleted] = useState(false);\n  const maxNominations = 5;\n\n  const [showMovieMoreInfo, setShowMovieMoreInfo] = useState(false);\n\n  // The movie to display in more info section\n  const [movie4MoreInfo, setMovie4MoreInfo] = useState({});\n\n  const onSearchEntryClicked = (movie) => {\n    setMovie4MoreInfo(movie);\n    console.log(\"Search Entry clicked \", movie4MoreInfo);\n    setShowMovieMoreInfo(true);\n  };\n\n  useEffect(() => {\n    const nominatedMovies = JSON.parse(\n      localStorage.getItem(\"omdb-app-nominations\")\n    );\n    console.log(\"Nominated movies local storage \", nominatedMovies);\n    // If we have nothing in local storage our array can be none\n    // so to avoid that we check if its before setting the state of nominated nominated movies\n    // from local storage\n    if (nominatedMovies) {\n      setNominatedMoviesList(nominatedMovies);\n    }\n  }, []);\n\n  useEffect(() => {\n    // Search term has changed, if it's more than 3 characters show search results\n    if (searchTerm.length >= 3) {\n      setSearchResultsVisibility(true);\n    } else if (searchTerm.length === 0) {\n      setSearchResultsVisibility(false);\n      setShowMovieMoreInfo(false);\n    }\n    if (nominatedMoviesList.length > 0) {\n      setNominationsVisibility(true);\n    }\n  }, [searchTerm, nominatedMoviesList]);\n\n  const nominateMovie = (movie) => {\n    if (nominatedMoviesList.length < maxNominations - 1) {\n      movie.disableNominate = true;\n      const newNominationsList = [...nominatedMoviesList, movie];\n      setNominatedMoviesList(newNominationsList);\n      saveToLocalStorage(newNominationsList);\n    } else if (nominatedMoviesList.length === maxNominations - 1) {\n      movie.disableNominate = true;\n      const newNominationsList = [...nominatedMoviesList, movie];\n      setNominatedMoviesList(newNominationsList);\n      saveToLocalStorage(newNominationsList);\n      setNomCompleted(true);\n    } else {\n      setNomCompleted(true);\n    }\n  };\n\n  const removeNomination = (movie) => {\n    movie.disableNominate = false;\n    const newNominationsList = nominatedMoviesList.filter(\n      (nominatedMoviesList) => nominatedMoviesList.imdbID !== movie.imdbID\n    );\n    setNomCompleted(false);\n    setNominatedMoviesList(newNominationsList);\n    saveToLocalStorage(newNominationsList);\n  };\n\n  const saveToLocalStorage = (items) => {\n    localStorage.setItem(\"omdb-app-nominations\", JSON.stringify(items));\n  };\n\n  const classes = useStyles();\n\n  // dark mode theming\n\n  const theme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n    },\n  });\n\n  return (\n \n    <ThemeProvider theme={theme}>\n         <Helmet>\n          <title>OMDb Movies</title>\n        </Helmet>\n      <Grid container direction=\"column\">\n        <Grid item xs={12}>\n          <SearchAppBar setSearchTerm={setSearchTerm} />\n        </Grid>\n        <Grid item xs={12} container direction=\"row\">\n          <Grid item container direction=\"column\" xs={5}>\n            <Grid item>\n              {searchResultsVisible ? (\n                <SearchResults\n                  searchTerm={searchTerm}\n                  currentPage={currentPage}\n                  setMaxPages={setMaxPages}\n                  onNominateClicked={nominateMovie}\n                  onSearchEntryClicked={onSearchEntryClicked}\n                  nominatedMoviesList={nominatedMoviesList}\n                ></SearchResults>\n              ) : null}\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            container\n            direction=\"row\"\n            xs={showMovieMoreInfo ? 3 : 6}\n            justify=\"center\"\n          >\n            <Grid item xs={12}>\n              {nominatedMoviesList.length ? (\n                <Typography className={classes.nominationsHeader} variant=\"h4\">\n                  Nominations\n                </Typography>\n              ) : null}\n              <NominatedMovies\n                movies={nominatedMoviesList}\n                onRemoveNominationClicked={removeNomination}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={4}>\n            <MovieMoreInfo visible={showMovieMoreInfo} movie={movie4MoreInfo} />\n          </Grid>\n        </Grid>\n      </Grid>\n      <PageControl\n        maxPages={maxPages}\n        minPages={1}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      ></PageControl>\n      <AlertDialog\n        hideButton={nominationsVisible}\n        open={nominationsCompleted}\n        nominations={nominatedMoviesList}\n      />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}