{"version":3,"sources":["components/MovieInfoDialog.js","components/MovieGrid.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["Transition","React","forwardRef","props","ref","Slide","direction","useStyles","makeStyles","theme","root","flexGrow","movieInfoDialog","padding","spacing","maxWidth","image","justifyContent","maxHeight","img","margin","display","rating","width","fontSize","MovieInfoDialog","classes","useState","setOpen","Dialog","overflow","fullWidth","scroll","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogContent","Grid","container","item","ButtonBase","className","alt","src","poster","xs","sm","Typography","gutterBottom","variant","title","plot","justify","Chip","label","color","DialogActions","Button","onClick","onDialogClosed","MoviePosterCard","console","log","moreInfo","setAdditionalMovieData","posterUrl","setPosterUrl","getAdditionalMovieData","a","url","imdbID","fetch","response","json","responseJson","useEffect","fixPosterImageErrors","height","onError","Plot","imdbRating","MovieGrid","setOpenDialog","onPosterClick","movies","map","movie","index","Title","Poster","appBar","backgroundColor","movieIcon","marginRight","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","breakpoints","up","searchIcon","pointerEvents","alignItems","inputRoot","inputInput","paddingLeft","transition","transitions","create","NavBar","AppBar","Toolbar","noWrap","InputBase","placeholder","input","inputProps","onChange","event","setSearchTerm","target","value","pageControlStyles","background","paper","minHeight","nextPageFab","grey","bottom","right","pageIndicatorFab","prevPageFab","PageControlFABS","pageCtrlDialogVisible","setPageCtrlVisibility","inputtedPageNumDialog","setInputtedPageNumDialog","pageError","setPageError","pageErrorText","setPageErrorText","handlePageCtrlClose","fabs","icon","clickHandler","newPageCount","currentPage","maxPages","setCurrentPage","minPages","fab","Fab","aria-label","DialogTitle","id","TextField","autoFocus","type","error","helperText","onKeyDown","key","preventDefault","InputProps","startAdornment","InputAdornment","App","searchTerm","setMovies","setMaxPages","searchMovieRequest","Search","totalResults","parseInt","maxPagesCalc","Math","ceil","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82b423cc.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { red } from \"@material-ui/core/colors\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  movieInfoDialog: {\n    padding: theme.spacing(2),\n    maxWidth: \"md\",\n  },\n  image: {\n    justifyContent: \"space-evenly\",\n    maxWidth: 200,\n    maxHeight: 300,\n  },\n  img: {\n    justifyContent: \"space-evenly\",\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n  rating: {\n    width: \"12%\",\n    fontSize: \"100%\",\n  },\n}));\n\nconst MovieInfoDialog = (props) => {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      //   className={\"movieInfoDialog\"}\n      overflow={\"hidden\"}\n      fullWidth={true}\n      maxWidth={\"md\"}\n      scroll={\"body\"}\n      open={props.open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogContent>\n        <Grid container spacing={2} fullWidth={true}>\n          <Grid item>\n            <ButtonBase className={classes.image}>\n              <img className={classes.img} alt=\"complex\" src={props.poster} />\n            </ButtonBase>\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"h5\">\n                  {props.title}\n                </Typography>\n                <Typography variant=\"body2\" gutterBottom>\n                  {props.plot}\n                </Typography>\n              </Grid>\n              <Grid item justify=\"flex-end\">\n                <Chip\n                  className={classes.rating}\n                  label={props.rating}\n                  color=\"secondary\"\n                ></Chip>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onDialogClosed} color=\"primary\">\n          CLOSE\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default MovieInfoDialog;\n","import React, { useEffect } from \"react\";\nimport MovieInfoDialog from \"./MovieInfoDialog\";\n\n// This class is mainly used to display movie text when the user hovers the curor over a movie poster\nconst MovieMoreInfo = (props) => {\n  return (\n    <>\n      <span className=\"mr-2\">{props.text}</span>\n      {/* Boostrap info circle svg */}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"#027cff\"\n        class=\"bi bi-info-circle-fill\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412l-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\" />\n      </svg>\n    </>\n  );\n};\n\nconst MoviePosterCard = (props) => {\n  const width = 200;\n  const height = 500;\n  // open is a boolean value that determines if a more info dialog should be shown\n  console.log(\"Get more data\");\n  const [open, setOpen] = React.useState(false);\n  const [moreInfo, setAdditionalMovieData] = React.useState({});\n  // Sometimes we get broken images from the API, so we need a way to change the poster image\n  // url in the event of a broken image\n  const [posterUrl, setPosterUrl] = React.useState(props.poster);\n\n  const getAdditionalMovieData = async () => {\n    const url =\n      \"https://www.omdbapi.com/?i=\" +\n      props.imdbID +\n      \"&apikey=a7d62505&plot=full\";\n    const response = await fetch(url);\n    const responseJson = await response.json();\n\n    setAdditionalMovieData(responseJson);\n  };\n\n  useEffect(() => {\n    fixPosterImageErrors();\n  }, [props.poster]);\n\n  const fixPosterImageErrors = () => {\n    // this temporary fallback image url will be changed later\n    if (props.poster === \"N/A\") {\n      setPosterUrl(\n        \"https://toppng.com/uploads/preview/movie-moviemaker-film-cut-svg-png-icon-free-download-movie-icon-11563265487xzdashbdvx.png\"\n      );\n    } else {\n      setPosterUrl(props.poster);\n    }\n  };\n\n  const handleCardClick = () => {\n    getAdditionalMovieData();\n    setOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div\n      key={props.imdbID}\n      className=\"image-container d-flex justify-content-center ml-4 mr-4 mb-3 mt-3\"\n    >\n      <img\n        width={330}\n        height={415}\n        src={posterUrl}\n        onClick={handleCardClick}\n        onError={fixPosterImageErrors}\n        alt=\"movie\"\n      ></img>\n      <MovieInfoDialog\n        key={props.imdbID}\n        open={open}\n        onDialogClosed={handleDialogClose}\n        title={props.title}\n        poster={props.poster}\n        plot={moreInfo.Plot}\n        // imdb ratings are out of 10\n        rating={moreInfo.imdbRating + \"/10\"}\n      ></MovieInfoDialog>\n    </div>\n  );\n};\n\nconst MovieGrid = (props) => {\n  const [open, setOpenDialog] = React.useState(false);\n\n  const onPosterClick = () => {\n    setOpenDialog(true);\n  };\n\n  const handleDialogClosed = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <>\n      {props.movies.map((movie, index) => (\n        // Bootstrap classes to make spacing look nicer\n        <>\n          <MoviePosterCard\n            imdbID={movie.imdbID}\n            title={movie.Title}\n            poster={movie.Poster}\n            onClick={onPosterClick}\n          ></MoviePosterCard>\n\n          <div className=\"overlay d-flex align-items-center justify-content-center\">\n            {/* <MovieMoreInfo text={movie.Title}></MovieMoreInfo> */}\n          </div>\n        </>\n      ))}\n    </>\n  );\n};\n\nexport default MovieGrid;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MovieIcon from \"@material-ui/icons/Movie\";\nimport TheatersOutlinedIcon from \"@material-ui/icons/TheatersOutlined\";\nimport MovieCreationOutlinedIcon from \"@material-ui/icons/MovieCreationOutlined\";\nimport \"./NavBar.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: \"#181818\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  movieIcon: {\n    // width: \"3%\",\n    // height: \"3%\",\n    fontSize: \"300%\",\n    marginRight: theme.spacing(2),\n    color: \"#ff316f\",\n    // transform: \"rotate(90deg)\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"30%\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <MovieCreationOutlinedIcon className={classes.movieIcon} />\n          <Typography className={\"OMDBTitle\"} variant=\"h4\" noWrap>\n            OMDB MOVIES\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={(event) => props.setSearchTerm(event.target.value)}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport MovieGrid from \"./components/MovieGrid\";\nimport NavBar from \"./components/NavBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport UpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport { grey, red } from \"@material-ui/core/colors\";\nimport ChevronRightOutlinedIcon from \"@material-ui/icons/ChevronRightOutlined\";\nimport ChevronLeftOutlinedIcon from \"@material-ui/icons/ChevronLeftOutlined\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst pageControlStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 600,\n    position: \"relative\",\n    minHeight: 200,\n  },\n  nextPageFab: {\n    position: \"absolute\",\n    color: theme.palette.common.white,\n    backgroundColor: grey[900],\n    \"&:hover\": {\n      backgroundColor: \"#f50057\",\n    },\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  },\n  pageIndicatorFab: {\n    position: \"absolute\",\n    bottom: theme.spacing(4),\n    right: theme.spacing(12),\n  },\n  prevPageFab: {\n    position: \"absolute\",\n    color: theme.palette.common.white,\n    backgroundColor: grey[900],\n    \"&:hover\": {\n      backgroundColor: \"#f50057\",\n    },\n    bottom: theme.spacing(4),\n    right: theme.spacing(20),\n  },\n}));\n\n// Page control floating buttons\nconst PageControlFABS = (props) => {\n  const classes = pageControlStyles();\n\n  const [pageCtrlDialogVisible, setPageCtrlVisibility] = useState(false);\n  // Keeps track of the page number that the user inputs in the page control dialog\n  const [inputtedPageNumDialog, setInputtedPageNumDialog] = useState(1);\n\n  // If the user inputs a page thats out of range pageError becomes true\n  const [pageError, setPageError] = useState(false);\n  // Text that tells user whats wrong with the page number they entered\n  const [pageErrorText, setPageErrorText] = useState(\"\");\n\n  const handlePageCtrlClose = () => {\n    setPageCtrlVisibility(false);\n  };\n\n  const handlePageCtrlDialogChange = (event) => {\n    if (\n      props.minPages <= event.target.value &&\n      event.target.value <= props.maxPages\n    ) {\n      setInputtedPageNumDialog(event.target.value);\n      setPageError(false);\n      setPageErrorText(\"\");\n    } else {\n      setPageError(true);\n      setPageErrorText(\n        `Input a page number between ${props.minPages}-${props.maxPages}`\n      );\n    }\n  };\n\n  const handlePageCtrlDialogKeyPresses = (event) => {\n    if (event.key === \"Enter\") {\n      // Jumps to the page the user types on enter key pressed\n      if (!pageError) {\n        // Hide the dialog after enter key\n        setPageCtrlVisibility(false);\n        // The user typed a valid page number to jump to in the dialog\n        // so set that valid page number as the current page number\n        props.setCurrentPage(inputtedPageNumDialog);\n        event.preventDefault();\n      }\n    }\n  };\n\n  // currentPage is an integer indicating current page number\n  var fabs = [\n    {\n      color: \"inherit\",\n      className: classes.nextPageFab,\n      icon: <ChevronRightOutlinedIcon />,\n      label: \"Next\",\n      clickHandler: (event) => {\n        var newPageCount = props.currentPage + 1;\n        if (newPageCount <= props.maxPages) {\n          props.setCurrentPage(newPageCount);\n          console.log(\"Current page changed \", props.currentPage);\n        }\n      },\n    },\n    {\n      color: \"secondary\",\n      className: classes.pageIndicatorFab,\n      icon: `${props.currentPage}/${props.maxPages}`,\n      label: `${props.currentPage}/${props.maxPages}`,\n      clickHandler: (event) => {\n        // Show page control dialog if this button is clicked\n        setPageCtrlVisibility(true);\n      },\n    },\n    {\n      color: \"inherit\",\n      className: classes.prevPageFab,\n      icon: <ChevronLeftOutlinedIcon />,\n      label: \"Prev\",\n      clickHandler: (event) => {\n        var newPageCount = props.currentPage - 1;\n        if (newPageCount >= props.minPages) {\n          props.setCurrentPage(newPageCount);\n          console.log(\"prev current page changed \", newPageCount);\n        }\n      },\n    },\n  ];\n\n  return (\n    <>\n      {fabs.map((fab, index) => (\n        <Fab\n          aria-label={fab.label}\n          className={fab.className}\n          color={fab.color}\n          onClick={fab.clickHandler}\n        >\n          {fab.icon}\n        </Fab>\n      ))}\n      <Dialog\n        open={pageCtrlDialogVisible}\n        onClose={handlePageCtrlClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Enter Page Number</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"pageNumber\"\n            label=\"Page Number\"\n            type=\"number\"\n            fullWidth\n            error={pageError}\n            helperText={pageErrorText}\n            onChange={handlePageCtrlDialogChange}\n            onKeyDown={handlePageCtrlDialogKeyPresses}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <FileCopyIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handlePageCtrlClose} color=\"primary\">\n            CLOSE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [maxPages, setMaxPages] = useState(1);\n\n  // This gets run everytime the state of searchTerm changes\n  useEffect(() => {\n    console.log(\"Search term was changed, \", searchTerm);\n    searchMovieRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchTerm, currentPage]);\n\n  const searchMovieRequest = async () => {\n    const url =\n      \"https://www.omdbapi.com/?s=\" +\n      searchTerm +\n      \"&apikey=a7d62505\" +\n      \"&page=\" +\n      currentPage;\n    const response = await fetch(url);\n\n    const responseJson = await response.json();\n\n    // If search results returned are not empty\n    if (responseJson.Search) {\n      setMovies(responseJson.Search);\n      var totalResults = parseInt(responseJson.totalResults);\n      // Calculation to determine how many pages there will be in total\n      // based on totalResults\n      // responseJson.Search.length is how many cards there are page, i.e.\n      // how many results get returned by page\n      var maxPagesCalc = Math.ceil(totalResults / responseJson.Search.length);\n      setMaxPages(maxPagesCalc);\n    }\n  };\n\n  return (\n    // Use bootstrap styles for root container\n    <>\n      <NavBar setSearchTerm={setSearchTerm} />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <MovieGrid movies={movies}></MovieGrid>\n        </div>\n        <PageControlFABS\n          maxPages={maxPages}\n          minPages={1}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n        ></PageControlFABS>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}